Index: app/src/main/res/layout/activity_sub_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"profile\"\r\n        tools:layout_editor_absoluteX=\"174dp\"\r\n        tools:layout_editor_absoluteY=\"349dp\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sub_profile.xml b/app/src/main/res/layout/activity_sub_profile.xml
--- a/app/src/main/res/layout/activity_sub_profile.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/app/src/main/res/layout/activity_sub_profile.xml	(date 1728944772367)
@@ -1,14 +1,61 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <TextView
-        android:id="@+id/textView7"
+    <ImageView
+        android:id="@+id/profile_picture"
+        android:layout_width="148dp"
+        android:layout_height="146dp"
+        android:layout_marginStart="131dp"
+        android:layout_marginTop="136dp"
+        android:layout_marginEnd="132dp"
+        app:layout_constraintBottom_toTopOf="@+id/profile_description"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:srcCompat="@tools:sample/avatars" />
+
+    <EditText
+        android:id="@+id/profile_description"
+        android:layout_width="413dp"
+        android:layout_height="121dp"
+        android:layout_marginBottom="135dp"
+        android:ems="10"
+        android:inputType="text"
+        android:text="Description"
+        app:layout_constraintBottom_toTopOf="@+id/profile_rating"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/profile_picture" />
+
+    <RatingBar
+        android:id="@+id/profile_rating"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="82dp"
+        android:layout_marginTop="135dp"
+        android:layout_marginEnd="89dp"
+        android:layout_marginBottom="136dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/profile_description" />
+
+    <Button
+        android:id="@+id/logout_button"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="profile"
-        tools:layout_editor_absoluteX="174dp"
-        tools:layout_editor_absoluteY="349dp" />
+        android:layout_marginStart="22dp"
+        android:layout_marginTop="15dp"
+        android:layout_marginEnd="19dp"
+        android:layout_marginBottom="140dp"
+        android:text="Logout"
+        app:layout_constraintBottom_toTopOf="@+id/profile_description"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/profile_picture"
+        app:layout_constraintTop_toTopOf="parent" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    implementation libs.uiautomator\r\n    implementation libs.google.firebase.auth\r\n    implementation libs.firebase.database\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/app/build.gradle	(date 1728944756360)
@@ -35,15 +35,26 @@
     implementation libs.material
     implementation libs.activity
     implementation libs.constraintlayout
-    implementation libs.uiautomator
-    implementation libs.google.firebase.auth
+    implementation libs.firebase.auth
     implementation libs.firebase.database
     testImplementation libs.junit
     androidTestImplementation libs.ext.junit
     androidTestImplementation libs.espresso.core
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
+    androidTestImplementation 'androidx.test:core:1.4.0'
+    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test:rules:1.4.0'
+    androidTestImplementation 'com.google.firebase:firebase-auth:21.0.1'
+    androidTestImplementation 'com.google.firebase:firebase-database:20.0.2'
+    testImplementation 'junit:junit:4.13.2'
+    testImplementation 'org.mockito:mockito-inline:4.x.x'
+    testImplementation("org.mockito:mockito-inline:4.11.0")
+    androidTestImplementation("org.mockito:mockito-inline:4.11.0")
+
 
     implementation platform('com.google.firebase:firebase-bom:33.3.0')
     implementation 'com.google.firebase:firebase-analytics'
     implementation "androidx.cardview:cardview:1.0.0"
-
 }
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\nfirebaseAuth = \"21.0.1\"\r\nfirebaseDatabase = \"20.0.2\"\r\nuiautomator = \"2.3.0\"\r\nfirebaseAuthVersion = \"23.0.0\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\nuiautomator = { group = \"androidx.test.uiautomator\", name = \"uiautomator\", version.ref = \"uiautomator\" }\r\ngoogle-firebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuthVersion\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/gradle/libs.versions.toml	(date 1728944761349)
@@ -9,8 +9,6 @@
 constraintlayout = "2.1.4"
 firebaseAuth = "21.0.1"
 firebaseDatabase = "20.0.2"
-uiautomator = "2.3.0"
-firebaseAuthVersion = "23.0.0"
 
 [libraries]
 junit = { group = "junit", name = "junit", version.ref = "junit" }
@@ -22,8 +20,6 @@
 constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
 firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
 firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
-google-firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuthVersion" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,86 +0,0 @@
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision 4d3dbdb11a23177d5850fb90061145216dc6b7f9)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501999644)
-@@ -5,6 +5,12 @@
-       <SelectionState runConfigName="app">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728501999650)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501999650)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]" date="1728501946054" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:25 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]" date="1728502533206" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:34 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,130 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/app/build.gradle	(date 1728502359047)
-@@ -35,6 +35,7 @@
-     implementation libs.material
-     implementation libs.activity
-     implementation libs.constraintlayout
-+    implementation libs.uiautomator
-     testImplementation libs.junit
-     androidTestImplementation libs.ext.junit
-     androidTestImplementation libs.espresso.core
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/gradle/libs.versions.toml	(date 1728502358990)
-@@ -7,6 +7,7 @@
- material = "1.12.0"
- activity = "1.9.2"
- constraintlayout = "2.1.4"
-+uiautomator = "2.3.0"
- 
- [libraries]
- junit = { group = "junit", name = "junit", version.ref = "junit" }
-@@ -16,6 +17,7 @@
- material = { group = "com.google.android.material", name = "material", version.ref = "material" }
- activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
- constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
-+uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
- 
- [plugins]
- android-application = { id = "com.android.application", version.ref = "agp" }
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728502279555)
-@@ -11,6 +11,12 @@
-       <SelectionState runConfigName="MainActivityEmployer">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728502279560)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728502279560)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
deleted file mode 100644
--- a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,73 +0,0 @@
-package com.example.quickcashapp;
-
-import static org.junit.Assert.assertTrue;
-
-import android.content.Context;
-import android.content.Intent;
-
-import androidx.test.core.app.ApplicationProvider;
-import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.uiautomator.By;
-import androidx.test.uiautomator.UiDevice;
-import androidx.test.uiautomator.UiObject;
-import androidx.test.uiautomator.UiSelector;
-import androidx.test.uiautomator.Until;
-import androidx.test.uiautomator.UiObjectNotFoundException;
-
-
-import org.junit.Before;
-import org.junit.Test;
-
-public class UIAutomatorTest {
-
-    private static final int LAUNCH_TIMEOUT = 5000;
-    final String launcherPackageName = "com.example.quickcashapp";
-    private UiDevice device;
-
-    @Before
-    public void setup() {
-        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-        Context context = ApplicationProvider.getApplicationContext();
-        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        context.startActivity(launcherIntent);
-        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-
-    @Test
-    public void checkIfLandingPageIsVisible() throws UiObjectNotFoundException {
-        //enter email and password
-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
-        emailBox.setText("test@example.com");
-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
-        passwordBox.setText("Password123");
-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
-        loginButton.clickAndWaitForNewWindow();
-
-
-        //find employer and employee button
-        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-        assertTrue(EmployerButton.exists());
-        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-        assertTrue(EmployeeButton.exists());
-    }
-
-    @Test
-    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-        //enter email and password
-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
-        emailBox.setText("test@example.com");
-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
-        passwordBox.setText("Password123");
-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
-        loginButton.clickAndWaitForNewWindow();
-
-        //Press employer button
-        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-        employerButton.clickAndWaitForNewWindow();
-
-        //check employer dashboard exists
-        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-        assertTrue(dashboardMain.exists());
-    }
-
-}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]" date="1728502279800" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:31 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,135 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/app/build.gradle	(date 1728500319519)
-@@ -39,7 +39,15 @@
-     androidTestImplementation libs.ext.junit
-     androidTestImplementation libs.espresso.core
- 
-+    /* UI Automator */
-+    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
-+    androidTestImplementation project(path: ':app')
-+
-+
-+    /*  Firebase */
-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
-     implementation 'com.google.firebase:firebase-analytics'
-+
-+    /* CardView UI */
-     implementation "androidx.cardview:cardview:1.0.0"
- }
-\ No newline at end of file
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.QuickCashApp\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n                <action android:name=\"android.intent.action.MainActivityEmployer\" />\r\n\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".MainActivityEmployer\"/>\r\n        <activity android:name=\".MainActivityEmployee\"/>\r\n        <activity android:name=\".SubActivityJobPost\"/>\r\n        <activity android:name=\".SubActivityMap\"/>\r\n        <activity android:name=\".SubActivityPayment\"/>\r\n        <activity android:name=\".SubActivityPreferredEmployee\"/>\r\n        <activity android:name=\".SubActivityProfile\"/>\r\n\r\n\r\n\r\n\r\n\r\n    </application>\r\n\r\n</manifest>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---- a/app/src/main/AndroidManifest.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/app/src/main/AndroidManifest.xml	(date 1728493872913)
-@@ -31,11 +31,6 @@
-         <activity android:name=".SubActivityPayment"/>
-         <activity android:name=".SubActivityPreferredEmployee"/>
-         <activity android:name=".SubActivityProfile"/>
--
--
--
--
--
-     </application>
- 
- </manifest>
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728501528985)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501528985)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501426538)
-@@ -11,6 +11,12 @@
-       <SelectionState runConfigName="MainActivityEmployer">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,103 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
-+++ b/app/build.gradle	(date 1728501911885)
-@@ -41,4 +41,5 @@
- 
-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
-     implementation 'com.google.firebase:firebase-analytics'
-+    implementation "androidx.cardview:cardview:1.0.0"
- }
-\ No newline at end of file
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501945785)
-@@ -5,6 +5,12 @@
-       <SelectionState runConfigName="app">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728501945776)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501945776)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]" date="1728501999923" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:26 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"493535482513\",\r\n    \"project_id\": \"quickcashapp-782c2\",\r\n    \"storage_bucket\": \"quickcashapp-782c2.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:493535482513:android:d5392fb74819af1f4d2530\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.quickcashapp\"\r\n        }\r\n      },\r\n      \"oauth_client\": [],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyBmL0PrqLfUE2cFpqklrm8Oa8d_6Nhqmsg\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": []\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
--- a/app/google-services.json	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/app/google-services.json	(date 1728944756354)
@@ -26,4 +26,4 @@
     }
   ],
   "configuration_version": "1"
-}
\ No newline at end of file
+}
Index: app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
new file mode 100644
--- /dev/null	(date 1728944756333)
+++ b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java	(date 1728944756333)
@@ -0,0 +1,66 @@
+package com.example.quickcashapp;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.typeText;
+import static androidx.test.espresso.assertion.ViewAssertions.matches;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+
+import androidx.test.core.app.ActivityScenario;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+
+import com.example.quickcashapp.employeeDashboard.RegisterActivity;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+@RunWith(AndroidJUnit4.class)
+public class RegisterEspressoTest {
+
+    @Before
+    public void setUp() {
+        ActivityScenario.launch(RegisterActivity.class);
+    }
+
+    @Test
+    public void testSuccessfulRegistration() throws InterruptedException {
+        onView(withId(R.id.name)).perform(typeText("iterationOne"));
+        onView(withId(R.id.email)).perform(typeText("iterationOne@gmail.com"));//must create new email for the test to work.
+        onView(withId(R.id.password)).perform(typeText("password1234S"));
+        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
+        onView(withId(R.id.role_radio_group)).perform(click());
+        onView(withId(R.id.register_button)).perform(click());
+        Thread.sleep(2000);// test closes whilst program is sending a GET request
+        onView(withId(R.id.statusMessage)).check(matches(withText("Registration successful")));
+    }
+
+    @Test
+    public void testEmptyFields() {
+        onView(withId(R.id.register_button)).perform(click());
+        onView(withId(R.id.statusMessage)).check(matches(withText("Please fill in all fields")));
+    }
+
+    @Test
+    public void testNoRoleSelected() {
+        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
+        onView(withId(R.id.email)).perform(typeText("Johntest111111!@gmail.com"));
+        onView(withId(R.id.password)).perform(typeText("password1234S"));
+        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
+        onView(withId(R.id.register_button)).perform(click());
+        onView(withId(R.id.statusMessage)).check(matches(withText("Please select a role")));
+    }
+
+    @Test
+    public void testInvalidEmail() {
+        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
+        onView(withId(R.id.email)).perform(typeText("invalidemail"));
+        onView(withId(R.id.password)).perform(typeText("password1234S"));
+        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
+        onView(withId(R.id.role_radio_group)).perform(click());
+        onView(withId(R.id.register_button)).perform(click());
+        onView(withId(R.id.statusMessage)).check(matches(withText("Invalid email address")));
+    }
+
+}
Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
new file mode 100644
--- /dev/null	(date 1728944756347)
+++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java	(date 1728944756347)
@@ -0,0 +1,48 @@
+package com.example.quickcashapp;
+
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.espresso.intent.Intents;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.intent.Intents.intended;
+import static androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+
+import com.example.quickcashapp.employerDashboard.SubActivityProfile;
+
+
+@RunWith(AndroidJUnit4.class)
+public class EmployerProfileEspressoTest {
+
+    @Rule
+    public ActivityTestRule<SubActivityProfile> activityTestRule = new ActivityTestRule<>(SubActivityProfile.class);
+
+    @Before
+    public void setUp() {
+        // Initialize Espresso Intents before the test
+        Intents.init();
+    }
+
+
+    @Test
+    public void testLogoutButtonChangesActivity(){
+        //Click logout button
+        onView(withId(R.id.logout_button)).perform(click());
+
+        intended(hasComponent(LoginActivity.class.getName()));
+
+    }
+
+    @After
+    public void tearDown(){
+        Intents.release();
+    }
+}
Index: app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
new file mode 100644
--- /dev/null	(date 1728944756341)
+++ b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java	(date 1728944756341)
@@ -0,0 +1,43 @@
+package com.example.quickcashapp;
+
+import static org.junit.Assert.assertNull;
+import static org.mockito.Mockito.*;
+
+import com.google.firebase.auth.FirebaseAuth;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+import org.mockito.MockitoAnnotations;
+
+
+/**
+ * Unit tests for the logout portion
+ */
+public class EmployerProfileUnitTest {
+
+    @Mock
+    FirebaseAuth mockAuth;
+
+    @Before
+    public void setUp() {
+
+        MockitoAnnotations.initMocks(this);
+        //Mock Firebase instance
+        mockAuth = Mockito.mock(FirebaseAuth.class);
+    }
+
+    @Test
+    public void testLogout(){
+
+        //Act like there is no user signed in by returning null from getCurrentUser
+        when(mockAuth.getCurrentUser()).thenReturn(null);
+
+        //Use signOut and make sure it works
+        mockAuth.signOut();
+        verify(mockAuth).signOut();
+        //Check to make sure there is no current user
+        assertNull(mockAuth.getCurrentUser());
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/.idea/misc.xml	(date 1728944761354)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
Index: app/src/main/java/com/example/quickcashapp/LoginValidator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quickcashapp;\r\n\r\nimport java.util.regex.Pattern;\r\n\r\npublic class LoginValidator {\r\n\r\n    public LoginValidator(){\r\n\r\n    };\r\n\r\n    public static boolean isValidPassword(String password) {\r\n        if (password == null) return false;\r\n        String passwordPattern = \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$\";\r\n        return Pattern.matches(passwordPattern, password);\r\n    }\r\n\r\n    public static boolean isValidEmail(String email) {\r\n        if (email == null) return false;\r\n\r\n        // Regular expression for the email\r\n        String emailPattern = \"^[\\\\w!#$%&'*+/=?`{|}~^.-]+@[\\\\w.-]+\\\\.[a-zA-Z]{2,}$\";\r\n        return Pattern.matches(emailPattern, email);\r\n    }\r\n\r\n    // Credit Card: Validates using Luhn algorithm\r\n    public static boolean isValidCreditCard(String number) {\r\n        if (number == null) return false;\r\n\r\n        int length =number.length();\r\n\r\n        return (length == 16);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quickcashapp/LoginValidator.java b/app/src/main/java/com/example/quickcashapp/LoginValidator.java
--- a/app/src/main/java/com/example/quickcashapp/LoginValidator.java	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/app/src/main/java/com/example/quickcashapp/LoginValidator.java	(date 1728944761359)
@@ -4,31 +4,55 @@
 
 public class LoginValidator {
 
-    public LoginValidator(){
+    public LoginValidator() {
+    }
 
-    };
-
+    // Validates if the password meets the criteria: at least 1 digit, 1 lowercase, 1 uppercase, and minimum 6 characters
     public static boolean isValidPassword(String password) {
-        if (password == null) return false;
+        if (password == null || password.isEmpty()) return false;
         String passwordPattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$";
         return Pattern.matches(passwordPattern, password);
     }
 
+    // Validates if the email follows a proper email pattern
     public static boolean isValidEmail(String email) {
-        if (email == null) return false;
-
-        // Regular expression for the email
+        if (email == null || email.isEmpty()) return false;
         String emailPattern = "^[\\w!#$%&'*+/=?`{|}~^.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$";
         return Pattern.matches(emailPattern, email);
     }
 
-    // Credit Card: Validates using Luhn algorithm
+    // Validates credit card number (length check and Luhn algorithm)
     public static boolean isValidCreditCard(String number) {
-        if (number == null) return false;
+        if (number == null || number.isEmpty()) return false;
+        // Length check: standard length is 16
+        if (number.length() != 16) return false;
 
-        int length =number.length();
+        return luhnCheck(number);
+    }
 
-        return (length == 16);
+    // Luhn algorithm for credit card validation
+    private static boolean luhnCheck(String number) {
+        int sum = 0;
+        boolean alternate = false;
+        for (int i = number.length() - 1; i >= 0; i--) {
+            int n = Integer.parseInt(number.substring(i, i + 1));
+            if (alternate) {
+                n *= 2;
+                if (n > 9) n -= 9;
+            }
+            sum += n;
+            alternate = !alternate;
+        }
+        return (sum % 10 == 0);
     }
-}
+
+    // Checks if input string is empty
+    public static boolean isEmpty(String input) {
+        return input == null || input.trim().isEmpty();
+    }
 
+    // Checks if the role selected is either "employer" or "employee"
+    public static boolean isValidRole(String role) {
+        return "employer".equalsIgnoreCase(role) || "employee".equalsIgnoreCase(role);
+    }
+}
Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
new file mode 100644
--- /dev/null	(date 1728944756367)
+++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java	(date 1728944756367)
@@ -0,0 +1,5 @@
+package com.example.quickcashapp;
+
+public class EmployerProfileUIAutomatorTest {
+
+}
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\nalias(libs.plugins.android.application) apply false\r\n    id 'com.google.gms.google-services' version '4.4.2' apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+++ b/build.gradle	(date 1728944778821)
@@ -2,4 +2,4 @@
 plugins {
 alias(libs.plugins.android.application) apply false
     id 'com.google.gms.google-services' version '4.4.2' apply false
-}
\ No newline at end of file
+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1728944756381)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml	(date 1728944756381)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]" date="1728858920529" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 10/13/2024 7:35 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1728944756376)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch	(date 1728944756376)
@@ -0,0 +1,83 @@
+Index: .idea/deploymentTargetSelector.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"EmployerProfileEspressoTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+--- a/.idea/deploymentTargetSelector.xml	
++++ b/.idea/deploymentTargetSelector.xml	
+@@ -5,7 +5,13 @@
+       <SelectionState runConfigName="app">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+-      <SelectionState runConfigName="EmployerProfileEspressoTest">
++      <SelectionState runConfigName="testLoginSuccess()">
++        <option name="selectionMode" value="DROPDOWN" />
++      </SelectionState>
++      <SelectionState runConfigName="LoginActivity">
++        <option name="selectionMode" value="DROPDOWN" />
++      </SelectionState>
++      <SelectionState runConfigName="testLoginFailure()">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+     </selectionStates>
+Index: app/src/main/java/com/example/quickcashapp/LoginActivity.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        // Apply window insets for padding\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        // Initialize Firebase Auth and Database\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n        // Get references to the UI elements\r\n        EditText emailEditText = findViewById(R.id.email);\r\n        EditText passwordEditText = findViewById(R.id.password);\r\n        Button loginButton = findViewById(R.id.login_button);\r\n        TextView registerButton = findViewById(R.id.register_link);\r\n\r\n        registerButton.setOnClickListener(v -> {navigateToRegistration();});\r\n\r\n\r\n        // Set the login button click listener\r\n        loginButton.setOnClickListener(v -> {\r\n            String email = emailEditText.getText().toString().trim();\r\n            String password = passwordEditText.getText().toString().trim();\r\n\r\n            // Validate input fields\r\n            if (!isValidEmail(email)) {\r\n                Toast.makeText(LoginActivity.this, \"Please enter a valid email address\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            if (password.isEmpty()) {\r\n                Toast.makeText(LoginActivity.this, \"Please fill in the password field\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            // Log in the user\r\n            loginUser(email, password);\r\n        });\r\n    }\r\n\r\n    private void navigateToRegistration() {\r\n        Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    // Helper method to validate email format\r\n    private boolean isValidEmail(String email) {\r\n        return !email.isEmpty() && Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    private void loginUser(String email, String password) {\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        // Login successful\r\n                        Toast.makeText(LoginActivity.this, \"Login successful\", Toast.LENGTH_SHORT).show();\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n                        // Retrieve user role from database\r\n                        mDatabase.child(\"users\").child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                if (dataSnapshot.exists()) {\r\n                                    String role = dataSnapshot.child(\"role\").getValue(String.class);\r\n                                    // Navigate to the respective dashboard based on user role\r\n                                    Intent intent;\r\n                                    if (\"employer\".equals(role)) {\r\n\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    } else {\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    }\r\n                                    startActivity(intent);\r\n                                    finish(); // Close the login activity\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(DatabaseError databaseError) {\r\n                                Toast.makeText(LoginActivity.this, \"Failed to retrieve user role\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // Login failed\r\n                        Toast.makeText(LoginActivity.this, \"Login failed: \" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n}\r\n
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/LoginActivity.java b/app/src/main/java/com/example/quickcashapp/LoginActivity.java
+--- a/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
++++ b/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
+@@ -117,7 +117,7 @@
+                         });
+                     } else {
+                         // Login failed
+-                        Toast.makeText(LoginActivity.this, "Login failed: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
++                        Toast.makeText(LoginActivity.this, "Login failed " , Toast.LENGTH_SHORT).show();
+                     }
+                 });
+     }
+Index: .idea/androidTestResultsUserPreferences.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidTestResultsUserPreferences\">\r\n    <option name=\"androidTestResultsTableState\">\r\n      <map>\r\n        <entry key=\"-1400229921\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Medium_Phone_API_35\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+===================================================================
+diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
+--- a/.idea/androidTestResultsUserPreferences.xml	
++++ b/.idea/androidTestResultsUserPreferences.xml	
+@@ -16,6 +16,32 @@
+             </AndroidTestResultsTableState>
+           </value>
+         </entry>
++        <entry key="-83393644">
++          <value>
++            <AndroidTestResultsTableState>
++              <option name="preferredColumnWidths">
++                <map>
++                  <entry key="Duration" value="90" />
++                  <entry key="Medium_Phone_API_35" value="120" />
++                  <entry key="Tests" value="360" />
++                </map>
++              </option>
++            </AndroidTestResultsTableState>
++          </value>
++        </entry>
++        <entry key="1487946811">
++          <value>
++            <AndroidTestResultsTableState>
++              <option name="preferredColumnWidths">
++                <map>
++                  <entry key="Duration" value="90" />
++                  <entry key="Medium_Phone_API_35" value="120" />
++                  <entry key="Tests" value="360" />
++                </map>
++              </option>
++            </AndroidTestResultsTableState>
++          </value>
++        </entry>
+       </map>
+     </option>
+   </component>
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch
new file mode 100644
