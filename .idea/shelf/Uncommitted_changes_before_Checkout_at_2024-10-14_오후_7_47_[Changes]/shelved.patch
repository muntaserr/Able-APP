Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ /dev/null	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
@@ -1,86 +0,0 @@
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision 4d3dbdb11a23177d5850fb90061145216dc6b7f9)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501999644)
-@@ -5,6 +5,12 @@
-       <SelectionState runConfigName="app">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728501999650)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501999650)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ /dev/null	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
@@ -1,130 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/app/build.gradle	(date 1728502359047)
-@@ -35,6 +35,7 @@
-     implementation libs.material
-     implementation libs.activity
-     implementation libs.constraintlayout
-+    implementation libs.uiautomator
-     testImplementation libs.junit
-     androidTestImplementation libs.ext.junit
-     androidTestImplementation libs.espresso.core
-Index: gradle/libs.versions.toml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
---- a/gradle/libs.versions.toml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/gradle/libs.versions.toml	(date 1728502358990)
-@@ -7,6 +7,7 @@
- material = "1.12.0"
- activity = "1.9.2"
- constraintlayout = "2.1.4"
-+uiautomator = "2.3.0"
- 
- [libraries]
- junit = { group = "junit", name = "junit", version.ref = "junit" }
-@@ -16,6 +17,7 @@
- material = { group = "com.google.android.material", name = "material", version.ref = "material" }
- activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
- constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
-+uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
- 
- [plugins]
- android-application = { id = "com.android.application", version.ref = "agp" }
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728502279555)
-@@ -11,6 +11,12 @@
-       <SelectionState runConfigName="MainActivityEmployer">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728502279560)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728502279560)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ /dev/null	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
@@ -1,135 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/app/build.gradle	(date 1728500319519)
-@@ -39,7 +39,15 @@
-     androidTestImplementation libs.ext.junit
-     androidTestImplementation libs.espresso.core
- 
-+    /* UI Automator */
-+    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
-+    androidTestImplementation project(path: ':app')
-+
-+
-+    /*  Firebase */
-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
-     implementation 'com.google.firebase:firebase-analytics'
-+
-+    /* CardView UI */
-     implementation "androidx.cardview:cardview:1.0.0"
- }
-\ No newline at end of file
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.QuickCashApp\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n                <action android:name=\"android.intent.action.MainActivityEmployer\" />\r\n\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".MainActivityEmployer\"/>\r\n        <activity android:name=\".MainActivityEmployee\"/>\r\n        <activity android:name=\".SubActivityJobPost\"/>\r\n        <activity android:name=\".SubActivityMap\"/>\r\n        <activity android:name=\".SubActivityPayment\"/>\r\n        <activity android:name=\".SubActivityPreferredEmployee\"/>\r\n        <activity android:name=\".SubActivityProfile\"/>\r\n\r\n\r\n\r\n\r\n\r\n    </application>\r\n\r\n</manifest>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---- a/app/src/main/AndroidManifest.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/app/src/main/AndroidManifest.xml	(date 1728493872913)
-@@ -31,11 +31,6 @@
-         <activity android:name=".SubActivityPayment"/>
-         <activity android:name=".SubActivityPreferredEmployee"/>
-         <activity android:name=".SubActivityProfile"/>
--
--
--
--
--
-     </application>
- 
- </manifest>
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728501528985)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501528985)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501426538)
-@@ -11,6 +11,12 @@
-       <SelectionState runConfigName="MainActivityEmployer">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
deleted file mode 100644
--- a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ /dev/null	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
@@ -1,73 +0,0 @@
-package com.example.quickcashapp;
-
-import static org.junit.Assert.assertTrue;
-
-import android.content.Context;
-import android.content.Intent;
-
-import androidx.test.core.app.ApplicationProvider;
-import androidx.test.platform.app.InstrumentationRegistry;
-import androidx.test.uiautomator.By;
-import androidx.test.uiautomator.UiDevice;
-import androidx.test.uiautomator.UiObject;
-import androidx.test.uiautomator.UiSelector;
-import androidx.test.uiautomator.Until;
-import androidx.test.uiautomator.UiObjectNotFoundException;
-
-
-import org.junit.Before;
-import org.junit.Test;
-
-public class UIAutomatorTest {
-
-    private static final int LAUNCH_TIMEOUT = 5000;
-    final String launcherPackageName = "com.example.quickcashapp";
-    private UiDevice device;
-
-    @Before
-    public void setup() {
-        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-        Context context = ApplicationProvider.getApplicationContext();
-        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        context.startActivity(launcherIntent);
-        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-
-    @Test
-    public void checkIfLandingPageIsVisible() throws UiObjectNotFoundException {
-        //enter email and password
-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
-        emailBox.setText("test@example.com");
-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
-        passwordBox.setText("Password123");
-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
-        loginButton.clickAndWaitForNewWindow();
-
-
-        //find employer and employee button
-        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-        assertTrue(EmployerButton.exists());
-        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-        assertTrue(EmployeeButton.exists());
-    }
-
-    @Test
-    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-        //enter email and password
-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
-        emailBox.setText("test@example.com");
-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
-        passwordBox.setText("Password123");
-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
-        loginButton.clickAndWaitForNewWindow();
-
-        //Press employer button
-        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-        employerButton.clickAndWaitForNewWindow();
-
-        //check employer dashboard exists
-        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-        assertTrue(dashboardMain.exists());
-    }
-
-}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ /dev/null	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
@@ -1,103 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
-+++ b/app/build.gradle	(date 1728501911885)
-@@ -41,4 +41,5 @@
- 
-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
-     implementation 'com.google.firebase:firebase-analytics'
-+    implementation "androidx.cardview:cardview:1.0.0"
- }
-\ No newline at end of file
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
---- a/.idea/deploymentTargetSelector.xml	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501945785)
-@@ -5,6 +5,12 @@
-       <SelectionState runConfigName="app">
-         <option name="selectionMode" value="DROPDOWN" />
-       </SelectionState>
-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
-+        <option name="selectionMode" value="DROPDOWN" />
-+      </SelectionState>
-     </selectionStates>
-   </component>
- </project>
-\ No newline at end of file
-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
-new file mode 100644
---- /dev/null	(date 1728501945776)
-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501945776)
-@@ -0,0 +1,52 @@
-+package com.example.quickcashapp;
-+
-+import static org.junit.Assert.assertTrue;
-+
-+import android.content.Context;
-+import android.content.Intent;
-+
-+import androidx.test.core.app.ApplicationProvider;
-+import androidx.test.platform.app.InstrumentationRegistry;
-+import androidx.test.uiautomator.By;
-+import androidx.test.uiautomator.UiDevice;
-+import androidx.test.uiautomator.UiObject;
-+import androidx.test.uiautomator.UiSelector;
-+import androidx.test.uiautomator.Until;
-+import androidx.test.uiautomator.UiObjectNotFoundException;
-+
-+
-+import org.junit.Before;
-+import org.junit.Test;
-+
-+public class UIAutomatorTest {
-+
-+    private static final int LAUNCH_TIMEOUT = 5000;
-+    final String launcherPackageName = "com.example.quickcashapp";
-+    private UiDevice device;
-+
-+    @Before
-+    public void setup() {
-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
-+        Context context = ApplicationProvider.getApplicationContext();
-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-+        context.startActivity(launcherIntent);
-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
-+
-+    @Test
-+    public void checkIfLandingPageIsVisible() {
-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
-+        assertTrue(EmployerButton.exists());
-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
-+        assertTrue(EmployeeButton.exists());
-+    }
-+
-+    @Test
-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
-+        employerButton.clickAndWaitForNewWindow();
-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
-+        assertTrue(dashboardMain.exists());
-+    }
-+
-+}
Index: app/google-services.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"493535482513\",\r\n    \"project_id\": \"quickcashapp-782c2\",\r\n    \"storage_bucket\": \"quickcashapp-782c2.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:493535482513:android:d5392fb74819af1f4d2530\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.quickcashapp\"\r\n        }\r\n      },\r\n      \"oauth_client\": [],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyBmL0PrqLfUE2cFpqklrm8Oa8d_6Nhqmsg\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": []\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
--- a/app/google-services.json	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/app/google-services.json	(date 1728945842453)
@@ -26,4 +26,4 @@
     }
   ],
   "configuration_version": "1"
-}
\ No newline at end of file
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    implementation libs.uiautomator\r\n    implementation libs.google.firebase.auth\r\n    implementation libs.firebase.database\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/app/build.gradle	(date 1728945842452)
@@ -35,15 +35,27 @@
     implementation libs.material
     implementation libs.activity
     implementation libs.constraintlayout
-    implementation libs.uiautomator
-    implementation libs.google.firebase.auth
+    implementation libs.firebase.auth
     implementation libs.firebase.database
+    implementation libs.uiautomator
     testImplementation libs.junit
     androidTestImplementation libs.ext.junit
     androidTestImplementation libs.espresso.core
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
+    androidTestImplementation 'androidx.test:core:1.4.0'
+    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test:rules:1.4.0'
+    androidTestImplementation 'com.google.firebase:firebase-auth:21.0.1'
+    androidTestImplementation 'com.google.firebase:firebase-database:20.0.2'
+    testImplementation 'junit:junit:4.13.2'
+    testImplementation 'org.mockito:mockito-inline:4.x.x'
+    testImplementation("org.mockito:mockito-inline:4.11.0")
+    androidTestImplementation("org.mockito:mockito-inline:4.11.0")
+
 
     implementation platform('com.google.firebase:firebase-bom:33.3.0')
     implementation 'com.google.firebase:firebase-analytics'
     implementation "androidx.cardview:cardview:1.0.0"
-
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	(date 1728944784898)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]1/shelved.patch	(date 1728944784898)
@@ -0,0 +1,1655 @@
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,86 +0,0 @@
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision 4d3dbdb11a23177d5850fb90061145216dc6b7f9)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501999644)
+-@@ -5,6 +5,12 @@
+-       <SelectionState runConfigName="app">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728501999650)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501999650)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]" date="1728501946054" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:25 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,17 +0,0 @@
+-Index: app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.quickcashapp;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\n\r\npublic class SubActivityJobPost extends MainActivityEmployer {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.acitivty_sub_jobpost);\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java b/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java
+---- a/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+-+++ b/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java	(date 1728504089025)
+-@@ -11,4 +11,4 @@
+-         EdgeToEdge.enable(this);
+-         setContentView(R.layout.acitivty_sub_jobpost);
+-     }
+--}
+-\ No newline at end of file
+-+}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,130 +0,0 @@
+-Index: app/build.gradle
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle b/app/build.gradle
+---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/build.gradle	(date 1728502359047)
+-@@ -35,6 +35,7 @@
+-     implementation libs.material
+-     implementation libs.activity
+-     implementation libs.constraintlayout
+-+    implementation libs.uiautomator
+-     testImplementation libs.junit
+-     androidTestImplementation libs.ext.junit
+-     androidTestImplementation libs.espresso.core
+-Index: gradle/libs.versions.toml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+---- a/gradle/libs.versions.toml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/gradle/libs.versions.toml	(date 1728502358990)
+-@@ -7,6 +7,7 @@
+- material = "1.12.0"
+- activity = "1.9.2"
+- constraintlayout = "2.1.4"
+-+uiautomator = "2.3.0"
+- 
+- [libraries]
+- junit = { group = "junit", name = "junit", version.ref = "junit" }
+-@@ -16,6 +17,7 @@
+- material = { group = "com.google.android.material", name = "material", version.ref = "material" }
+- activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
+- constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
+-+uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
+- 
+- [plugins]
+- android-application = { id = "com.android.application", version.ref = "agp" }
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728502279555)
+-@@ -11,6 +11,12 @@
+-       <SelectionState runConfigName="MainActivityEmployer">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728502279560)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728502279560)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,135 +0,0 @@
+-Index: app/build.gradle
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle b/app/build.gradle
+---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/build.gradle	(date 1728500319519)
+-@@ -39,7 +39,15 @@
+-     androidTestImplementation libs.ext.junit
+-     androidTestImplementation libs.espresso.core
+- 
+-+    /* UI Automator */
+-+    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
+-+    androidTestImplementation project(path: ':app')
+-+
+-+
+-+    /*  Firebase */
+-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
+-     implementation 'com.google.firebase:firebase-analytics'
+-+
+-+    /* CardView UI */
+-     implementation "androidx.cardview:cardview:1.0.0"
+- }
+-\ No newline at end of file
+-Index: app/src/main/AndroidManifest.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.QuickCashApp\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n                <action android:name=\"android.intent.action.MainActivityEmployer\" />\r\n\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".MainActivityEmployer\"/>\r\n        <activity android:name=\".MainActivityEmployee\"/>\r\n        <activity android:name=\".SubActivityJobPost\"/>\r\n        <activity android:name=\".SubActivityMap\"/>\r\n        <activity android:name=\".SubActivityPayment\"/>\r\n        <activity android:name=\".SubActivityPreferredEmployee\"/>\r\n        <activity android:name=\".SubActivityProfile\"/>\r\n\r\n\r\n\r\n\r\n\r\n    </application>\r\n\r\n</manifest>\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
+---- a/app/src/main/AndroidManifest.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/src/main/AndroidManifest.xml	(date 1728493872913)
+-@@ -31,11 +31,6 @@
+-         <activity android:name=".SubActivityPayment"/>
+-         <activity android:name=".SubActivityPreferredEmployee"/>
+-         <activity android:name=".SubActivityProfile"/>
+--
+--
+--
+--
+--
+-     </application>
+- 
+- </manifest>
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728501528985)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501528985)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501426538)
+-@@ -11,6 +11,12 @@
+-       <SelectionState runConfigName="MainActivityEmployer">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_20__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_20__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_20__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_20__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]" date="1728505226374" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 5:20 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_21__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_21__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_21__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__5_21__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_21_[Changes]" date="1728505279445" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_21_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 5:21 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_21_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_21_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_21_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_21_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,70 +0,0 @@
+-Index: app/src/main/java/com/example/quickcashapp/MainActivityEmployer.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.quickcashapp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.activity.ComponentActivity;\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.cardview.widget.CardView;\r\n\r\npublic class MainActivityEmployer extends ComponentActivity {\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main_employer);\r\n\r\n        c1 = findViewById(R.id.cardView1);\r\n        c2 = findViewById(R.id.cardView2);\r\n        c3 = findViewById(R.id.cardView3);\r\n        c4 = findViewById(R.id.cardView4);\r\n        c5 = findViewById(R.id.cardView5);\r\n        c6 = findViewById(R.id.cardView6);\r\n\r\n\r\n\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityMap.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityPreferredEmployee.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityJobPost.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityPayment.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityProfile.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n}\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/quickcashapp/MainActivityEmployer.java b/app/src/main/java/com/example/quickcashapp/MainActivityEmployer.java
+---- a/app/src/main/java/com/example/quickcashapp/MainActivityEmployer.java	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/src/main/java/com/example/quickcashapp/MainActivityEmployer.java	(date 1728505272396)
+-@@ -3,7 +3,6 @@
+- import android.content.Intent;
+- import android.os.Bundle;
+- import android.view.View;
+--import android.widget.TextView;
+- 
+- import androidx.activity.ComponentActivity;
+- import androidx.activity.EdgeToEdge;
+-@@ -18,6 +17,7 @@
+-         EdgeToEdge.enable(this);
+-         setContentView(R.layout.activity_main_employer);
+- 
+-+        
+-         c1 = findViewById(R.id.cardView1);
+-         c2 = findViewById(R.id.cardView2);
+-         c3 = findViewById(R.id.cardView3);
+-Index: app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>package com.example.quickcashapp;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\n\r\npublic class SubActivityJobPost extends MainActivityEmployer {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.acitivty_sub_jobpost);\r\n    }\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java b/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java
+---- a/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java	(date 1728505226366)
+-@@ -11,4 +11,4 @@
+-         EdgeToEdge.enable(this);
+-         setContentView(R.layout.acitivty_sub_jobpost);
+-     }
+--}
+-\ No newline at end of file
+-+}
+-Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch
+-new file mode 100644
+---- /dev/null	(date 1728505226012)
+-+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_5_20_[Changes]/shelved.patch	(date 1728505226012)
+-@@ -0,0 +1,17 @@
+-+Index: app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java
+-+IDEA additional info:
+-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-+<+>package com.example.quickcashapp;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\n\r\npublic class SubActivityJobPost extends MainActivityEmployer {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.acitivty_sub_jobpost);\r\n    }\r\n}
+-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-+<+>UTF-8
+-+===================================================================
+-+diff --git a/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java b/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java
+-+--- a/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+-++++ b/app/src/main/java/com/example/quickcashapp/SubActivityJobPost.java	(date 1728504089025)
+-+@@ -11,4 +11,4 @@
+-+         EdgeToEdge.enable(this);
+-+         setContentView(R.layout.acitivty_sub_jobpost);
+-+     }
+-+-}
+-+\ No newline at end of file
+-++}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]" date="1728502533206" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:34 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]" date="1728502279800" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:31 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+deleted file mode 100644
+--- a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	
++++ /dev/null	
+@@ -1,73 +0,0 @@
+-package com.example.quickcashapp;
+-
+-import static org.junit.Assert.assertTrue;
+-
+-import android.content.Context;
+-import android.content.Intent;
+-
+-import androidx.test.core.app.ApplicationProvider;
+-import androidx.test.platform.app.InstrumentationRegistry;
+-import androidx.test.uiautomator.By;
+-import androidx.test.uiautomator.UiDevice;
+-import androidx.test.uiautomator.UiObject;
+-import androidx.test.uiautomator.UiSelector;
+-import androidx.test.uiautomator.Until;
+-import androidx.test.uiautomator.UiObjectNotFoundException;
+-
+-
+-import org.junit.Before;
+-import org.junit.Test;
+-
+-public class UIAutomatorTest {
+-
+-    private static final int LAUNCH_TIMEOUT = 5000;
+-    final String launcherPackageName = "com.example.quickcashapp";
+-    private UiDevice device;
+-
+-    @Before
+-    public void setup() {
+-        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-        Context context = ApplicationProvider.getApplicationContext();
+-        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-        context.startActivity(launcherIntent);
+-        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-
+-    @Test
+-    public void checkIfLandingPageIsVisible() throws UiObjectNotFoundException {
+-        //enter email and password
+-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
+-        emailBox.setText("test@example.com");
+-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
+-        passwordBox.setText("Password123");
+-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
+-        loginButton.clickAndWaitForNewWindow();
+-
+-
+-        //find employer and employee button
+-        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-        assertTrue(EmployerButton.exists());
+-        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-        assertTrue(EmployeeButton.exists());
+-    }
+-
+-    @Test
+-    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-        //enter email and password
+-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
+-        emailBox.setText("test@example.com");
+-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
+-        passwordBox.setText("Password123");
+-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
+-        loginButton.clickAndWaitForNewWindow();
+-
+-        //Press employer button
+-        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-        employerButton.clickAndWaitForNewWindow();
+-
+-        //check employer dashboard exists
+-        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-        assertTrue(dashboardMain.exists());
+-    }
+-
+-}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch	
++++ /dev/null	
+@@ -1,103 +0,0 @@
+-Index: app/build.gradle
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle b/app/build.gradle
+---- a/app/build.gradle	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
+-+++ b/app/build.gradle	(date 1728501911885)
+-@@ -41,4 +41,5 @@
+- 
+-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
+-     implementation 'com.google.firebase:firebase-analytics'
+-+    implementation "androidx.cardview:cardview:1.0.0"
+- }
+-\ No newline at end of file
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501945785)
+-@@ -5,6 +5,12 @@
+-       <SelectionState runConfigName="app">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728501945776)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501945776)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml	
++++ /dev/null	
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]" date="1728501999923" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:26 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
+new file mode 100644
+--- /dev/null	
++++ b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java	
+@@ -0,0 +1,66 @@
++package com.example.quickcashapp;
++
++import static androidx.test.espresso.Espresso.onView;
++import static androidx.test.espresso.action.ViewActions.click;
++import static androidx.test.espresso.action.ViewActions.typeText;
++import static androidx.test.espresso.assertion.ViewAssertions.matches;
++import static androidx.test.espresso.matcher.ViewMatchers.withId;
++import static androidx.test.espresso.matcher.ViewMatchers.withText;
++
++import androidx.test.core.app.ActivityScenario;
++import androidx.test.ext.junit.runners.AndroidJUnit4;
++
++import com.example.quickcashapp.employeeDashboard.RegisterActivity;
++
++import org.junit.Before;
++import org.junit.Test;
++import org.junit.runner.RunWith;
++
++@RunWith(AndroidJUnit4.class)
++public class RegisterEspressoTest {
++
++    @Before
++    public void setUp() {
++        ActivityScenario.launch(RegisterActivity.class);
++    }
++
++    @Test
++    public void testSuccessfulRegistration() throws InterruptedException {
++        onView(withId(R.id.name)).perform(typeText("iterationOne"));
++        onView(withId(R.id.email)).perform(typeText("iterationOne@gmail.com"));//must create new email for the test to work.
++        onView(withId(R.id.password)).perform(typeText("password1234S"));
++        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
++        onView(withId(R.id.role_radio_group)).perform(click());
++        onView(withId(R.id.register_button)).perform(click());
++        Thread.sleep(2000);// test closes whilst program is sending a GET request
++        onView(withId(R.id.statusMessage)).check(matches(withText("Registration successful")));
++    }
++
++    @Test
++    public void testEmptyFields() {
++        onView(withId(R.id.register_button)).perform(click());
++        onView(withId(R.id.statusMessage)).check(matches(withText("Please fill in all fields")));
++    }
++
++    @Test
++    public void testNoRoleSelected() {
++        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
++        onView(withId(R.id.email)).perform(typeText("Johntest111111!@gmail.com"));
++        onView(withId(R.id.password)).perform(typeText("password1234S"));
++        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
++        onView(withId(R.id.register_button)).perform(click());
++        onView(withId(R.id.statusMessage)).check(matches(withText("Please select a role")));
++    }
++
++    @Test
++    public void testInvalidEmail() {
++        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
++        onView(withId(R.id.email)).perform(typeText("invalidemail"));
++        onView(withId(R.id.password)).perform(typeText("password1234S"));
++        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
++        onView(withId(R.id.role_radio_group)).perform(click());
++        onView(withId(R.id.register_button)).perform(click());
++        onView(withId(R.id.statusMessage)).check(matches(withText("Invalid email address")));
++    }
++
++}
+Index: app/src/androidTest/java/com/example/quickcashapp/espressoLoginTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/espressoLoginTest.java b/app/src/androidTest/java/com/example/quickcashapp/espressoLoginTest.java
+new file mode 100644
+--- /dev/null	
++++ b/app/src/androidTest/java/com/example/quickcashapp/espressoLoginTest.java	
+@@ -0,0 +1,62 @@
++package com.example.quickcashapp;
++
++import static androidx.test.espresso.Espresso.onView;
++import static androidx.test.espresso.action.ViewActions.click;
++import static androidx.test.espresso.action.ViewActions.typeText;
++import static androidx.test.espresso.assertion.ViewAssertions.matches;
++import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
++import static androidx.test.espresso.matcher.ViewMatchers.withId;
++import static androidx.test.espresso.matcher.ViewMatchers.withText;
++
++import androidx.test.core.app.ActivityScenario;
++
++import org.junit.Test;
++
++public class espressoLoginTest {
++    @Test
++    public void testLoginSuccess() {
++        // Launch the login activity
++        ActivityScenario.launch(LoginActivity.class);
++
++        // Enter valid email and password
++        onView(withId(R.id.email)).perform(typeText("test@example.com"));
++        onView(withId(R.id.password)).perform(typeText("Password123"));
++
++        // Close the soft keyboard to avoid it blocking the login button
++        onView(withId(R.id.login_button)).perform(click());
++
++        // Assuming login success redirects to a dashboard activity, check if the dashboard is displayed
++        // For example, if the dashboard shows a welcome message, you can check it
++        onView(withText("Welcome to your dashboard")).check(matches(isDisplayed()));
++    }
++
++    @Test
++    public void testLoginFailure() {
++        // Launch the login activity
++        ActivityScenario.launch(LoginActivity.class);
++
++        // Enter an invalid email or password
++        onView(withId(R.id.email)).perform(typeText("invalid@example.com"));
++        onView(withId(R.id.password)).perform(typeText("wrongpassword"));
++
++        // Close the soft keyboard and click login
++        onView(withId(R.id.login_button)).perform(click());
++
++        // Check if the login failure message is displayed
++        onView(withText("Login failed")).check(matches(isDisplayed()));
++    }
++
++    @Test
++    public void testLoginEmptyFields() {
++        // Launch the login activity
++        ActivityScenario.launch(LoginActivity.class);
++
++        // Click login without entering email or password
++        onView(withId(R.id.login_button)).perform(click());
++
++        // Check if the error message for empty email and password fields is displayed
++        onView(withText("Please enter a valid email address")).check(matches(isDisplayed()));
++    }
++
++
++}
+Index: app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
+new file mode 100644
+--- /dev/null	
++++ b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java	
+@@ -0,0 +1,43 @@
++package com.example.quickcashapp;
++
++import static org.junit.Assert.assertNull;
++import static org.mockito.Mockito.*;
++
++import com.google.firebase.auth.FirebaseAuth;
++
++import org.junit.Before;
++import org.junit.Test;
++import org.mockito.Mock;
++import org.mockito.Mockito;
++import org.mockito.MockitoAnnotations;
++
++
++/**
++ * Unit tests for the logout portion
++ */
++public class EmployerProfileUnitTest {
++
++    @Mock
++    FirebaseAuth mockAuth;
++
++    @Before
++    public void setUp() {
++
++        MockitoAnnotations.initMocks(this);
++        //Mock Firebase instance
++        mockAuth = Mockito.mock(FirebaseAuth.class);
++    }
++
++    @Test
++    public void testLogout(){
++
++        //Act like there is no user signed in by returning null from getCurrentUser
++        when(mockAuth.getCurrentUser()).thenReturn(null);
++
++        //Use signOut and make sure it works
++        mockAuth.signOut();
++        verify(mockAuth).signOut();
++        //Check to make sure there is no current user
++        assertNull(mockAuth.getCurrentUser());
++    }
++}
+Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
+new file mode 100644
+--- /dev/null	
++++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java	
+@@ -0,0 +1,48 @@
++package com.example.quickcashapp;
++
++import androidx.test.ext.junit.runners.AndroidJUnit4;
++import androidx.test.rule.ActivityTestRule;
++import androidx.test.espresso.intent.Intents;
++
++import org.junit.After;
++import org.junit.Before;
++import org.junit.Rule;
++import org.junit.Test;
++import org.junit.runner.RunWith;
++
++import static androidx.test.espresso.Espresso.onView;
++import static androidx.test.espresso.action.ViewActions.click;
++import static androidx.test.espresso.intent.Intents.intended;
++import static androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent;
++import static androidx.test.espresso.matcher.ViewMatchers.withId;
++
++import com.example.quickcashapp.employerDashboard.SubActivityProfile;
++
++
++@RunWith(AndroidJUnit4.class)
++public class EmployerProfileEspressoTest {
++
++    @Rule
++    public ActivityTestRule<SubActivityProfile> activityTestRule = new ActivityTestRule<>(SubActivityProfile.class);
++
++    @Before
++    public void setUp() {
++        // Initialize Espresso Intents before the test
++        Intents.init();
++    }
++
++
++    @Test
++    public void testLogoutButtonChangesActivity(){
++        //Click logout button
++        onView(withId(R.id.logout_button)).perform(click());
++
++        intended(hasComponent(LoginActivity.class.getName()));
++
++    }
++
++    @After
++    public void tearDown(){
++        Intents.release();
++    }
++}
+Index: app/google-services.json
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"493535482513\",\r\n    \"project_id\": \"quickcashapp-782c2\",\r\n    \"storage_bucket\": \"quickcashapp-782c2.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:493535482513:android:d5392fb74819af1f4d2530\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.quickcashapp\"\r\n        }\r\n      },\r\n      \"oauth_client\": [],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyBmL0PrqLfUE2cFpqklrm8Oa8d_6Nhqmsg\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": []\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/google-services.json b/app/google-services.json
+--- a/app/google-services.json	
++++ b/app/google-services.json	
+@@ -26,4 +26,4 @@
+     }
+   ],
+   "configuration_version": "1"
+-}
+\ No newline at end of file
++}
+Index: app/build.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    implementation libs.uiautomator\r\n    implementation libs.google.firebase.auth\r\n    implementation libs.firebase.database\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/build.gradle b/app/build.gradle
+--- a/app/build.gradle	
++++ b/app/build.gradle	
+@@ -35,15 +35,26 @@
+     implementation libs.material
+     implementation libs.activity
+     implementation libs.constraintlayout
+-    implementation libs.uiautomator
+-    implementation libs.google.firebase.auth
++    implementation libs.firebase.auth
+     implementation libs.firebase.database
+     testImplementation libs.junit
+     androidTestImplementation libs.ext.junit
+     androidTestImplementation libs.espresso.core
++    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
++    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
++    androidTestImplementation 'androidx.test:core:1.4.0'
++    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
++    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
++    androidTestImplementation 'androidx.test:rules:1.4.0'
++    androidTestImplementation 'com.google.firebase:firebase-auth:21.0.1'
++    androidTestImplementation 'com.google.firebase:firebase-database:20.0.2'
++    testImplementation 'junit:junit:4.13.2'
++    testImplementation 'org.mockito:mockito-inline:4.x.x'
++    testImplementation("org.mockito:mockito-inline:4.11.0")
++    androidTestImplementation("org.mockito:mockito-inline:4.11.0")
++
+ 
+     implementation platform('com.google.firebase:firebase-bom:33.3.0')
+     implementation 'com.google.firebase:firebase-analytics'
+     implementation "androidx.cardview:cardview:1.0.0"
+-
+ }
+\ No newline at end of file
+Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
+new file mode 100644
+--- /dev/null	
++++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java	
+@@ -0,0 +1,5 @@
++package com.example.quickcashapp;
++
++public class EmployerProfileUIAutomatorTest {
++
++}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch	
+@@ -0,0 +1,83 @@
++Index: .idea/deploymentTargetSelector.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"EmployerProfileEspressoTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
++--- a/.idea/deploymentTargetSelector.xml	
+++++ b/.idea/deploymentTargetSelector.xml	
++@@ -5,7 +5,13 @@
++       <SelectionState runConfigName="app">
++         <option name="selectionMode" value="DROPDOWN" />
++       </SelectionState>
++-      <SelectionState runConfigName="EmployerProfileEspressoTest">
+++      <SelectionState runConfigName="testLoginSuccess()">
+++        <option name="selectionMode" value="DROPDOWN" />
+++      </SelectionState>
+++      <SelectionState runConfigName="LoginActivity">
+++        <option name="selectionMode" value="DROPDOWN" />
+++      </SelectionState>
+++      <SelectionState runConfigName="testLoginFailure()">
++         <option name="selectionMode" value="DROPDOWN" />
++       </SelectionState>
++     </selectionStates>
++Index: app/src/main/java/com/example/quickcashapp/LoginActivity.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.quickcashapp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        // Apply window insets for padding\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        // Initialize Firebase Auth and Database\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n        // Get references to the UI elements\r\n        EditText emailEditText = findViewById(R.id.email);\r\n        EditText passwordEditText = findViewById(R.id.password);\r\n        Button loginButton = findViewById(R.id.login_button);\r\n        TextView registerButton = findViewById(R.id.register_link);\r\n\r\n        registerButton.setOnClickListener(v -> {navigateToRegistration();});\r\n\r\n\r\n        // Set the login button click listener\r\n        loginButton.setOnClickListener(v -> {\r\n            String email = emailEditText.getText().toString().trim();\r\n            String password = passwordEditText.getText().toString().trim();\r\n\r\n            // Validate input fields\r\n            if (!isValidEmail(email)) {\r\n                Toast.makeText(LoginActivity.this, \"Please enter a valid email address\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            if (password.isEmpty()) {\r\n                Toast.makeText(LoginActivity.this, \"Please fill in the password field\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            // Log in the user\r\n            loginUser(email, password);\r\n        });\r\n    }\r\n\r\n    private void navigateToRegistration() {\r\n        Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    // Helper method to validate email format\r\n    private boolean isValidEmail(String email) {\r\n        return !email.isEmpty() && Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    private void loginUser(String email, String password) {\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        // Login successful\r\n                        Toast.makeText(LoginActivity.this, \"Login successful\", Toast.LENGTH_SHORT).show();\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n                        // Retrieve user role from database\r\n                        mDatabase.child(\"users\").child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                if (dataSnapshot.exists()) {\r\n                                    String role = dataSnapshot.child(\"role\").getValue(String.class);\r\n                                    // Navigate to the respective dashboard based on user role\r\n                                    Intent intent;\r\n                                    if (\"employer\".equals(role)) {\r\n\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    } else {\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    }\r\n                                    startActivity(intent);\r\n                                    finish(); // Close the login activity\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(DatabaseError databaseError) {\r\n                                Toast.makeText(LoginActivity.this, \"Failed to retrieve user role\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // Login failed\r\n                        Toast.makeText(LoginActivity.this, \"Login failed: \" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n}\r\n
++===================================================================
++diff --git a/app/src/main/java/com/example/quickcashapp/LoginActivity.java b/app/src/main/java/com/example/quickcashapp/LoginActivity.java
++--- a/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
+++++ b/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
++@@ -117,7 +117,7 @@
++                         });
++                     } else {
++                         // Login failed
++-                        Toast.makeText(LoginActivity.this, "Login failed: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
+++                        Toast.makeText(LoginActivity.this, "Login failed " , Toast.LENGTH_SHORT).show();
++                     }
++                 });
++     }
++Index: .idea/androidTestResultsUserPreferences.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidTestResultsUserPreferences\">\r\n    <option name=\"androidTestResultsTableState\">\r\n      <map>\r\n        <entry key=\"-1400229921\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Medium_Phone_API_35\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
++===================================================================
++diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
++--- a/.idea/androidTestResultsUserPreferences.xml	
+++++ b/.idea/androidTestResultsUserPreferences.xml	
++@@ -16,6 +16,32 @@
++             </AndroidTestResultsTableState>
++           </value>
++         </entry>
+++        <entry key="-83393644">
+++          <value>
+++            <AndroidTestResultsTableState>
+++              <option name="preferredColumnWidths">
+++                <map>
+++                  <entry key="Duration" value="90" />
+++                  <entry key="Medium_Phone_API_35" value="120" />
+++                  <entry key="Tests" value="360" />
+++                </map>
+++              </option>
+++            </AndroidTestResultsTableState>
+++          </value>
+++        </entry>
+++        <entry key="1487946811">
+++          <value>
+++            <AndroidTestResultsTableState>
+++              <option name="preferredColumnWidths">
+++                <map>
+++                  <entry key="Duration" value="90" />
+++                  <entry key="Medium_Phone_API_35" value="120" />
+++                  <entry key="Tests" value="360" />
+++                </map>
+++              </option>
+++            </AndroidTestResultsTableState>
+++          </value>
+++        </entry>
++       </map>
++     </option>
++   </component>
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
+new file mode 100644
+--- /dev/null	
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml	
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]" date="1728858920529" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 10/13/2024 7:35 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/androidTestResultsUserPreferences.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidTestResultsUserPreferences\">\r\n    <option name=\"androidTestResultsTableState\">\r\n      <map>\r\n        <entry key=\"-1914084653\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_6_Pro_API_30\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"323647046\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_8_Pro_API_31\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"890745521\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_6_Pro_API_30\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"1436104304\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_6_Pro_API_30\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
+--- a/.idea/androidTestResultsUserPreferences.xml	
++++ b/.idea/androidTestResultsUserPreferences.xml	
+@@ -3,52 +3,39 @@
+   <component name="AndroidTestResultsUserPreferences">
+     <option name="androidTestResultsTableState">
+       <map>
+-        <entry key="-1914084653">
++        <entry key="-1400229921">
+           <value>
+             <AndroidTestResultsTableState>
+               <option name="preferredColumnWidths">
+                 <map>
+                   <entry key="Duration" value="90" />
+-                  <entry key="Pixel_6_Pro_API_30" value="120" />
++                  <entry key="Medium_Phone_API_35" value="120" />
+                   <entry key="Tests" value="360" />
+                 </map>
+               </option>
+             </AndroidTestResultsTableState>
+           </value>
+         </entry>
+-        <entry key="323647046">
++        <entry key="-723240372">
+           <value>
+             <AndroidTestResultsTableState>
+               <option name="preferredColumnWidths">
+                 <map>
+                   <entry key="Duration" value="90" />
+-                  <entry key="Pixel_8_Pro_API_31" value="120" />
++                  <entry key="Medium_Phone_API_35" value="120" />
+                   <entry key="Tests" value="360" />
+                 </map>
+               </option>
+             </AndroidTestResultsTableState>
+           </value>
+         </entry>
+-        <entry key="890745521">
++        <entry key="1885478600">
+           <value>
+             <AndroidTestResultsTableState>
+               <option name="preferredColumnWidths">
+                 <map>
+                   <entry key="Duration" value="90" />
+-                  <entry key="Pixel_6_Pro_API_30" value="120" />
+-                  <entry key="Tests" value="360" />
+-                </map>
+-              </option>
+-            </AndroidTestResultsTableState>
+-          </value>
+-        </entry>
+-        <entry key="1436104304">
+-          <value>
+-            <AndroidTestResultsTableState>
+-              <option name="preferredColumnWidths">
+-                <map>
+-                  <entry key="Duration" value="90" />
+-                  <entry key="Pixel_6_Pro_API_30" value="120" />
++                  <entry key="Medium_Phone_API_35" value="120" />
+                   <entry key="Tests" value="360" />
+                 </map>
+               </option>
+Index: gradle/libs.versions.toml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\nfirebaseAuth = \"21.0.1\"\r\nfirebaseDatabase = \"20.0.2\"\r\nuiautomator = \"2.3.0\"\r\nfirebaseAuthVersion = \"23.0.0\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\nuiautomator = { group = \"androidx.test.uiautomator\", name = \"uiautomator\", version.ref = \"uiautomator\" }\r\ngoogle-firebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuthVersion\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+--- a/gradle/libs.versions.toml	
++++ b/gradle/libs.versions.toml	
+@@ -9,8 +9,6 @@
+ constraintlayout = "2.1.4"
+ firebaseAuth = "21.0.1"
+ firebaseDatabase = "20.0.2"
+-uiautomator = "2.3.0"
+-firebaseAuthVersion = "23.0.0"
+ 
+ [libraries]
+ junit = { group = "junit", name = "junit", version.ref = "junit" }
+@@ -22,8 +20,6 @@
+ constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
+ firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+ firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
+-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
+-google-firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuthVersion" }
+ 
+ [plugins]
+ android-application = { id = "com.android.application", version.ref = "agp" }
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	
++++ b/.idea/misc.xml	
+@@ -1,4 +1,3 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ExternalStorageConfigurationManager" enabled="true" />
+   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
+Index: app/src/main/java/com/example/quickcashapp/LoginValidator.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp;\r\n\r\nimport java.util.regex.Pattern;\r\n\r\npublic class LoginValidator {\r\n\r\n    public LoginValidator(){\r\n\r\n    };\r\n\r\n    public static boolean isValidPassword(String password) {\r\n        if (password == null) return false;\r\n        String passwordPattern = \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$\";\r\n        return Pattern.matches(passwordPattern, password);\r\n    }\r\n\r\n    public static boolean isValidEmail(String email) {\r\n        if (email == null) return false;\r\n\r\n        // Regular expression for the email\r\n        String emailPattern = \"^[\\\\w!#$%&'*+/=?`{|}~^.-]+@[\\\\w.-]+\\\\.[a-zA-Z]{2,}$\";\r\n        return Pattern.matches(emailPattern, email);\r\n    }\r\n\r\n    // Credit Card: Validates using Luhn algorithm\r\n    public static boolean isValidCreditCard(String number) {\r\n        if (number == null) return false;\r\n\r\n        int length =number.length();\r\n\r\n        return (length == 16);\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/LoginValidator.java b/app/src/main/java/com/example/quickcashapp/LoginValidator.java
+--- a/app/src/main/java/com/example/quickcashapp/LoginValidator.java	
++++ b/app/src/main/java/com/example/quickcashapp/LoginValidator.java	
+@@ -4,31 +4,55 @@
+ 
+ public class LoginValidator {
+ 
+-    public LoginValidator(){
++    public LoginValidator() {
++    }
+ 
+-    };
+-
++    // Validates if the password meets the criteria: at least 1 digit, 1 lowercase, 1 uppercase, and minimum 6 characters
+     public static boolean isValidPassword(String password) {
+-        if (password == null) return false;
++        if (password == null || password.isEmpty()) return false;
+         String passwordPattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$";
+         return Pattern.matches(passwordPattern, password);
+     }
+ 
++    // Validates if the email follows a proper email pattern
+     public static boolean isValidEmail(String email) {
+-        if (email == null) return false;
+-
+-        // Regular expression for the email
++        if (email == null || email.isEmpty()) return false;
+         String emailPattern = "^[\\w!#$%&'*+/=?`{|}~^.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$";
+         return Pattern.matches(emailPattern, email);
+     }
+ 
+-    // Credit Card: Validates using Luhn algorithm
++    // Validates credit card number (length check and Luhn algorithm)
+     public static boolean isValidCreditCard(String number) {
+-        if (number == null) return false;
++        if (number == null || number.isEmpty()) return false;
++        // Length check: standard length is 16
++        if (number.length() != 16) return false;
+ 
+-        int length =number.length();
++        return luhnCheck(number);
++    }
+ 
+-        return (length == 16);
++    // Luhn algorithm for credit card validation
++    private static boolean luhnCheck(String number) {
++        int sum = 0;
++        boolean alternate = false;
++        for (int i = number.length() - 1; i >= 0; i--) {
++            int n = Integer.parseInt(number.substring(i, i + 1));
++            if (alternate) {
++                n *= 2;
++                if (n > 9) n -= 9;
++            }
++            sum += n;
++            alternate = !alternate;
++        }
++        return (sum % 10 == 0);
+     }
+-}
++
++    // Checks if input string is empty
++    public static boolean isEmpty(String input) {
++        return input == null || input.trim().isEmpty();
++    }
+ 
++    // Checks if the role selected is either "employer" or "employee"
++    public static boolean isValidRole(String role) {
++        return "employer".equalsIgnoreCase(role) || "employee".equalsIgnoreCase(role);
++    }
++}
+Index: app/src/main/res/layout/activity_sub_profile.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/profile\"\r\n        tools:layout_editor_absoluteX=\"174dp\"\r\n        tools:layout_editor_absoluteY=\"349dp\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/res/layout/activity_sub_profile.xml b/app/src/main/res/layout/activity_sub_profile.xml
+--- a/app/src/main/res/layout/activity_sub_profile.xml	
++++ b/app/src/main/res/layout/activity_sub_profile.xml	
+@@ -1,15 +1,61 @@
+ <?xml version="1.0" encoding="utf-8"?>
+ <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
++    xmlns:app="http://schemas.android.com/apk/res-auto"
+     xmlns:tools="http://schemas.android.com/tools"
+     android:layout_width="match_parent"
+     android:layout_height="match_parent">
+ 
+-    <TextView
+-        android:id="@+id/textView7"
++    <ImageView
++        android:id="@+id/profile_picture"
++        android:layout_width="148dp"
++        android:layout_height="146dp"
++        android:layout_marginStart="131dp"
++        android:layout_marginTop="136dp"
++        android:layout_marginEnd="132dp"
++        app:layout_constraintBottom_toTopOf="@+id/profile_description"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toStartOf="parent"
++        app:layout_constraintTop_toTopOf="parent"
++        tools:srcCompat="@tools:sample/avatars" />
++
++    <EditText
++        android:id="@+id/profile_description"
++        android:layout_width="413dp"
++        android:layout_height="121dp"
++        android:layout_marginBottom="135dp"
++        android:ems="10"
++        android:inputType="text"
++        android:text="Description"
++        app:layout_constraintBottom_toTopOf="@+id/profile_rating"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toStartOf="parent"
++        app:layout_constraintTop_toBottomOf="@+id/profile_picture" />
++
++    <RatingBar
++        android:id="@+id/profile_rating"
++        android:layout_width="wrap_content"
++        android:layout_height="wrap_content"
++        android:layout_marginStart="82dp"
++        android:layout_marginTop="135dp"
++        android:layout_marginEnd="89dp"
++        android:layout_marginBottom="136dp"
++        app:layout_constraintBottom_toBottomOf="parent"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toStartOf="parent"
++        app:layout_constraintTop_toBottomOf="@+id/profile_description" />
++
++    <Button
++        android:id="@+id/logout_button"
+         android:layout_width="wrap_content"
+         android:layout_height="wrap_content"
+-        android:text="@string/profile"
+-        tools:layout_editor_absoluteX="174dp"
+-        tools:layout_editor_absoluteY="349dp"
+-        tools:ignore="MissingConstraints" />
++        android:layout_marginStart="22dp"
++        android:layout_marginTop="15dp"
++        android:layout_marginEnd="19dp"
++        android:layout_marginBottom="140dp"
++        android:text="Logout"
++        app:layout_constraintBottom_toTopOf="@+id/profile_description"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toEndOf="@+id/profile_picture"
++        app:layout_constraintTop_toTopOf="parent" />
++
+ </androidx.constraintlayout.widget.ConstraintLayout>
+\ No newline at end of file
+Index: .idea/deploymentTargetSelector.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"mainActivityEmployeeTest()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"checkIfLandingPageIsVisible()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"checkIfSelectingRoleIsAvailable()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"UIAutomatorTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+--- a/.idea/deploymentTargetSelector.xml	
++++ b/.idea/deploymentTargetSelector.xml	
+@@ -5,16 +5,10 @@
+       <SelectionState runConfigName="app">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+-      <SelectionState runConfigName="mainActivityEmployeeTest()">
+-        <option name="selectionMode" value="DROPDOWN" />
+-      </SelectionState>
+-      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-        <option name="selectionMode" value="DROPDOWN" />
+-      </SelectionState>
+-      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
++      <SelectionState runConfigName="RegisterEspressoTest">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+-      <SelectionState runConfigName="UIAutomatorTest">
++      <SelectionState runConfigName="testSuccessfulRegistration() (2)">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+     </selectionStates>
+Index: .gitlab-ci.yml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+># This file is a template, and might need editing before it works on your project.\r\n# To contribute improvements to CI/CD templates, please follow the Development guide at:\r\n# https://docs.gitlab.com/ee/development/cicd/templates.html\r\n# This specific template is located at:\r\n# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Android.gitlab-ci.yml\r\n\r\n# Read more about this script on this blog post https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/, by Jason Lenny\r\n# If you are interested in using Android with FastLane for publishing take a look at the Android-Fastlane template.\r\n\r\n# image: openjdk:8-jdk\r\n# image: openjdk:11\r\nimage: openjdk:17-jdk-bullseye\r\n\r\nvariables:\r\n\r\n  # ANDROID_COMPILE_SDK is the version of Android you're compiling with.\r\n  # It should match compileSdkVersion.\r\n  ANDROID_COMPILE_SDK: \"29\"\r\n\r\n  # ANDROID_BUILD_TOOLS is the version of the Android build tools you are using.\r\n  # It should match buildToolsVersion.\r\n  ANDROID_BUILD_TOOLS: \"29.0.3\"\r\n\r\n  # It's what version of the command line tools we're going to download from the official site.\r\n  # Official Site-> https://developer.android.com/studio/index.html\r\n  # There, look down below at the cli tools only, sdk tools package is of format:\r\n  #        commandlinetools-os_type-ANDROID_SDK_TOOLS_latest.zip\r\n  # when the script was last modified for latest compileSdkVersion, it was which is written down below\r\n  ANDROID_SDK_TOOLS: \"6514223\"\r\n\r\n# Packages installation before running script\r\nbefore_script:\r\n  - apt-get --quiet update --yes\r\n  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1\r\n\r\n  # Setup path as android_home for moving/exporting the downloaded sdk into it\r\n  - export ANDROID_HOME=\"${PWD}/android-home\"\r\n  # Create a new directory at specified location\r\n  - install -d $ANDROID_HOME\r\n  # Here we are installing androidSDK tools from official source,\r\n  # (the key thing here is the url from where you are downloading these sdk tool for command line, so please do note this url pattern there and here as well)\r\n  # after that unzipping those tools and\r\n  # then running a series of SDK manager commands to install necessary android SDK packages that'll allow the app to build\r\n  - wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip\r\n  # move to the archive at ANDROID_HOME\r\n  - pushd $ANDROID_HOME\r\n  - unzip -d cmdline-tools cmdline-tools.zip\r\n  - popd\r\n  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/tools/bin/\r\n\r\n  # Nothing fancy here, just checking sdkManager version\r\n  - sdkmanager --version\r\n\r\n  # use yes to accept all licenses\r\n  - yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses || true\r\n  - sdkmanager --sdk_root=${ANDROID_HOME} \"platforms;android-${ANDROID_COMPILE_SDK}\"\r\n  - sdkmanager --sdk_root=${ANDROID_HOME} \"platform-tools\"\r\n  - sdkmanager --sdk_root=${ANDROID_HOME} \"build-tools;${ANDROID_BUILD_TOOLS}\"\r\n\r\n  # Not necessary, but just for surity\r\n  - chmod +x ./gradlew\r\n\r\n# Basic android and gradle stuff\r\n# Check linting\r\nlintDebug:\r\n  interruptible: true\r\n  stage: build\r\n  script:\r\n    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint\r\n\r\n# Make Project\r\nassembleDebug:\r\n  interruptible: true\r\n  stage: build\r\n  script:\r\n    - ./gradlew assembleDebug\r\n  artifacts:\r\n    paths:\r\n      - app/build/outputs/\r\n\r\n# Run all tests, if any fails, interrupt the pipeline(fail it)\r\ndebugTests:\r\n  interruptible: true\r\n  stage: test\r\n  script:\r\n    - ./gradlew -Pci --console=plain :app:testDebug\r\n\r\nunit_tests:\r\n  stage: test\r\n  script:\r\n    - ./gradlew test\r\n  artifacts:\r\n    when: always\r\n    expire_in: 30 days\r\n    paths:\r\n      - app/build/reports/tests/\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
+--- a/.gitlab-ci.yml	
++++ b/.gitlab-ci.yml	
+@@ -1,96 +1,14 @@
+-# This file is a template, and might need editing before it works on your project.
+-# To contribute improvements to CI/CD templates, please follow the Development guide at:
+-# https://docs.gitlab.com/ee/development/cicd/templates.html
+-# This specific template is located at:
+-# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Android.gitlab-ci.yml
+-
+-# Read more about this script on this blog post https://about.gitlab.com/2018/10/24/setting-up-gitlab-ci-for-android-projects/, by Jason Lenny
+-# If you are interested in using Android with FastLane for publishing take a look at the Android-Fastlane template.
+-
+-# image: openjdk:8-jdk
+-# image: openjdk:11
+-image: openjdk:17-jdk-bullseye
+-
+-variables:
+-
+-  # ANDROID_COMPILE_SDK is the version of Android you're compiling with.
+-  # It should match compileSdkVersion.
+-  ANDROID_COMPILE_SDK: "29"
+-
+-  # ANDROID_BUILD_TOOLS is the version of the Android build tools you are using.
+-  # It should match buildToolsVersion.
+-  ANDROID_BUILD_TOOLS: "29.0.3"
+-
+-  # It's what version of the command line tools we're going to download from the official site.
+-  # Official Site-> https://developer.android.com/studio/index.html
+-  # There, look down below at the cli tools only, sdk tools package is of format:
+-  #        commandlinetools-os_type-ANDROID_SDK_TOOLS_latest.zip
+-  # when the script was last modified for latest compileSdkVersion, it was which is written down below
+-  ANDROID_SDK_TOOLS: "6514223"
+-
+-# Packages installation before running script
+-before_script:
+-  - apt-get --quiet update --yes
+-  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
+-
+-  # Setup path as android_home for moving/exporting the downloaded sdk into it
+-  - export ANDROID_HOME="${PWD}/android-home"
+-  # Create a new directory at specified location
+-  - install -d $ANDROID_HOME
+-  # Here we are installing androidSDK tools from official source,
+-  # (the key thing here is the url from where you are downloading these sdk tool for command line, so please do note this url pattern there and here as well)
+-  # after that unzipping those tools and
+-  # then running a series of SDK manager commands to install necessary android SDK packages that'll allow the app to build
+-  - wget --output-document=$ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
+-  # move to the archive at ANDROID_HOME
+-  - pushd $ANDROID_HOME
+-  - unzip -d cmdline-tools cmdline-tools.zip
+-  - popd
+-  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/tools/bin/
+-
+-  # Nothing fancy here, just checking sdkManager version
+-  - sdkmanager --version
+-
+-  # use yes to accept all licenses
+-  - yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses || true
+-  - sdkmanager --sdk_root=${ANDROID_HOME} "platforms;android-${ANDROID_COMPILE_SDK}"
+-  - sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools"
+-  - sdkmanager --sdk_root=${ANDROID_HOME} "build-tools;${ANDROID_BUILD_TOOLS}"
+-
+-  # Not necessary, but just for surity
+-  - chmod +x ./gradlew
+-
+-# Basic android and gradle stuff
+-# Check linting
+-lintDebug:
+-  interruptible: true
+-  stage: build
+-  script:
+-    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint
+-
+-# Make Project
+-assembleDebug:
+-  interruptible: true
+-  stage: build
+-  script:
+-    - ./gradlew assembleDebug
+-  artifacts:
+-    paths:
+-      - app/build/outputs/
+-
+-# Run all tests, if any fails, interrupt the pipeline(fail it)
+-debugTests:
+-  interruptible: true
++# You can override the included template(s) by including variable overrides
++# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
++# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
++# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
++# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
++# Note that environment variables can be set in several places
++# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
++stages:
++- test
++sast:
+   stage: test
+-  script:
+-    - ./gradlew -Pci --console=plain :app:testDebug
++include:
++- template: Security/SAST.gitlab-ci.yml
+ 
+-unit_tests:
+-  stage: test
+-  script:
+-    - ./gradlew test
+-  artifacts:
+-    when: always
+-    expire_in: 30 days
+-    paths:
+-      - app/build/reports/tests/
+Index: app/src/main/AndroidManifest.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.QuickCashApp\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity\r\n            android:name=\".employeeDashboard.MainActivityEmployee\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".employerDashboard.MainActivityEmployer\" />\r\n        <activity android:name=\".employerDashboard.SubActivityProfile\" />\r\n        <activity android:name=\".employerDashboard.SubActivityPayment\" />\r\n        <activity android:name=\".employerDashboard.SubActivityPreferredEmployee\" />\r\n        <activity android:name=\".employerDashboard.SubActivityJobPost\" />\r\n        <activity android:name=\".employerDashboard.SubActivityMap\" />\r\n    </application>\r\n\r\n</manifest>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
+--- a/app/src/main/AndroidManifest.xml	
++++ b/app/src/main/AndroidManifest.xml	
+@@ -31,21 +31,18 @@
+             </intent-filter>
+         </activity>
+ 
+-        <activity
+-            android:name=".employeeDashboard.MainActivityEmployee"
+-            android:exported="true">
+-            <intent-filter>
+-                <action android:name="android.intent.action.MAIN" />
+-                <category android:name="android.intent.category.DEFAULT" />
+-            </intent-filter>
+-        </activity>
+ 
+-        <activity android:name=".employerDashboard.MainActivityEmployer" />
+-        <activity android:name=".employerDashboard.SubActivityProfile" />
+-        <activity android:name=".employerDashboard.SubActivityPayment" />
+-        <activity android:name=".employerDashboard.SubActivityPreferredEmployee" />
+-        <activity android:name=".employerDashboard.SubActivityJobPost" />
+-        <activity android:name=".employerDashboard.SubActivityMap" />
++        <activity android:name=".employerDashboard.MainActivityEmployer"/>
++        <activity android:name=".employeeDashboard.MainActivityEmployee"/>
++        <activity android:name=".employeeDashboard.SearchJobsActivity"/>
++        <activity android:name=".employeeDashboard.SetPreferenceActivity"/>
++        <activity android:name=".employerDashboard.SubActivityJobPost"/>
++        <activity android:name=".employerDashboard.SubActivityMap"/>
++        <activity android:name=".employerDashboard.SubActivityPayment"/>
++        <activity android:name=".employerDashboard.SubActivityPreferredEmployee"/>
++        <activity android:name=".employerDashboard.SubActivityProfile"/>
++        <activity android:name=".employeeDashboard.RegisterActivity"/>
++
+     </application>
+ 
+ </manifest>
+\ No newline at end of file
+Index: build.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\nalias(libs.plugins.android.application) apply false\r\n    id 'com.google.gms.google-services' version '4.4.2' apply false\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/build.gradle b/build.gradle
+--- a/build.gradle	
++++ b/build.gradle	
+@@ -2,4 +2,4 @@
+ plugins {
+ alias(libs.plugins.android.application) apply false
+     id 'com.google.gms.google-services' version '4.4.2' apply false
+-}
+\ No newline at end of file
++}
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch
+new file mode 100644
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1728944784871)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]/shelved.patch	(date 1728944784871)
@@ -0,0 +1,339 @@
+Index: app/src/androidTest/java/com/example/quickcashapp/employeeDashboard/MainActivityEmployeeTest.java
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/employeeDashboard/MainActivityEmployeeTest.java b/app/src/androidTest/java/com/example/quickcashapp/MainActivityEmployeeTest.java
+rename from app/src/androidTest/java/com/example/quickcashapp/employeeDashboard/MainActivityEmployeeTest.java
+rename to app/src/androidTest/java/com/example/quickcashapp/MainActivityEmployeeTest.java
+--- a/app/src/androidTest/java/com/example/quickcashapp/employeeDashboard/MainActivityEmployeeTest.java	
++++ b/app/src/androidTest/java/com/example/quickcashapp/MainActivityEmployeeTest.java	
+@@ -1,4 +1,4 @@
+-package com.example.quickcashapp.employeeDashboard;
++package com.example.quickcashapp;
+ 
+ 
+ import static androidx.test.espresso.Espresso.onView;
+@@ -16,7 +16,7 @@
+ import androidx.test.ext.junit.runners.AndroidJUnit4;
+ import androidx.test.filters.LargeTest;
+ 
+-import com.example.quickcashapp.R;
++import com.example.quickcashapp.employeeDashboard.MainActivityEmployee;
+ 
+ import org.hamcrest.core.IsInstanceOf;
+ import org.junit.Rule;
+Index: app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityJobPost.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp.employerDashboard;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\n\r\nimport com.example.quickcashapp.R;\r\n\r\npublic class SubActivityJobPost extends MainActivityEmployer {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.acitivty_sub_jobpost);\r\n    }\r\n}\r\n
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityJobPost.java b/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityJobPost.java
+--- a/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityJobPost.java	
++++ b/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityJobPost.java	
+@@ -13,4 +13,4 @@
+         EdgeToEdge.enable(this);
+         setContentView(R.layout.acitivty_sub_jobpost);
+     }
+-}
++}
+\ No newline at end of file
+Index: app/src/main/java/com/example/quickcashapp/employerDashboard/MainActivityEmployer.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp.employerDashboard;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\n\r\nimport androidx.activity.ComponentActivity;\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.cardview.widget.CardView;\r\n\r\nimport com.example.quickcashapp.MainActivity;\r\nimport com.example.quickcashapp.R;\r\n\r\npublic class MainActivityEmployer extends ComponentActivity {\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main_employer);\r\n\r\n        //card view initialization\r\n        c1 = findViewById(R.id.cardView1);\r\n        c2 = findViewById(R.id.cardView2);\r\n        c3 = findViewById(R.id.cardView3);\r\n        c4 = findViewById(R.id.cardView4);\r\n        c5 = findViewById(R.id.cardView5);\r\n        c6 = findViewById(R.id.cardView6);\r\n\r\n\r\n        //if c1 is clicked, moves to according page\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityMap.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        //if c2 is clicked, moves to according page\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        //if c3 is clicked, moves to according page\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityPreferredEmployee.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        //if c4 is clicked, moves to according page\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityJobPost.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        //if c5 is clicked, moves to according page\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityPayment.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        //if c6 is clicked, moves to according page\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivityEmployer.this, SubActivityProfile.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n}\r\n
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/employerDashboard/MainActivityEmployer.java b/app/src/main/java/com/example/quickcashapp/employerDashboard/MainActivityEmployer.java
+--- a/app/src/main/java/com/example/quickcashapp/employerDashboard/MainActivityEmployer.java	
++++ b/app/src/main/java/com/example/quickcashapp/employerDashboard/MainActivityEmployer.java	
+@@ -3,6 +3,7 @@
+ import android.content.Intent;
+ import android.os.Bundle;
+ import android.view.View;
++import android.widget.TextView;
+ 
+ import androidx.activity.ComponentActivity;
+ import androidx.activity.EdgeToEdge;
+@@ -20,7 +21,6 @@
+         EdgeToEdge.enable(this);
+         setContentView(R.layout.activity_main_employer);
+ 
+-        //card view initialization
+         c1 = findViewById(R.id.cardView1);
+         c2 = findViewById(R.id.cardView2);
+         c3 = findViewById(R.id.cardView3);
+@@ -29,7 +29,7 @@
+         c6 = findViewById(R.id.cardView6);
+ 
+ 
+-        //if c1 is clicked, moves to according page
++
+         c1.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+@@ -38,7 +38,6 @@
+             }
+         });
+ 
+-        //if c2 is clicked, moves to according page
+         c2.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+@@ -47,7 +46,6 @@
+             }
+         });
+ 
+-        //if c3 is clicked, moves to according page
+         c3.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+@@ -56,7 +54,6 @@
+             }
+         });
+ 
+-        //if c4 is clicked, moves to according page
+         c4.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+@@ -65,7 +62,6 @@
+             }
+         });
+ 
+-        //if c5 is clicked, moves to according page
+         c5.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+@@ -74,7 +70,6 @@
+             }
+         });
+ 
+-        //if c6 is clicked, moves to according page
+         c6.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View view) {
+Index: app/src/main/java/com/example/quickcashapp/employeeDashboard/RegisterActivity.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp.employeeDashboard;\r\n\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.example.quickcashapp.LoginValidator;\r\nimport com.example.quickcashapp.R;\r\nimport com.example.quickcashapp.User;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase;\r\n    private RadioGroup roleRadioGroup;\r\n    private RadioButton selectedRoleButton;\r\n    public LoginValidator validator;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_register);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        // Initialize Firebase Auth and Database Reference\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n        validator = new LoginValidator();\r\n\r\n        // Get references to the UI elements\r\n        EditText nameEditText = findViewById(R.id.name);\r\n        EditText emailEditText = findViewById(R.id.email);\r\n        EditText passwordEditText = findViewById(R.id.password);\r\n        EditText creditCardEditText = findViewById(R.id.credit_card);\r\n        roleRadioGroup = findViewById(R.id.role_radio_group);\r\n\r\n        Button registerButton = findViewById(R.id.register_button);\r\n\r\n\r\n        registerButton.setOnClickListener(v -> {\r\n            String name = nameEditText.getText().toString().trim();\r\n            String email = emailEditText.getText().toString().trim();\r\n            String password = passwordEditText.getText().toString();\r\n            String creditCard = creditCardEditText.getText().toString().trim();\r\n\r\n            // Validate input fields\r\n            if (name.isEmpty() || email.isEmpty() || password.isEmpty() || creditCard.isEmpty()) {\r\n                setStatusMessage(\"Please fill in all fields\",Color.RED);\r\n                return;\r\n            }\r\n\r\n            // Get selected role\r\n            int selectedRoleId = roleRadioGroup.getCheckedRadioButtonId();\r\n            if (selectedRoleId == -1) {\r\n                // No role selected\r\n                setStatusMessage(\"Please select a role\",Color.RED);\r\n                return;\r\n            } else {\r\n                selectedRoleButton = findViewById(selectedRoleId);\r\n            }\r\n\r\n            String selectedRole = selectedRoleButton.getText().toString().toLowerCase();\r\n\r\n            // Register the user with the selected role\r\n            if(!validator.isValidPassword(password)){\r\n                setStatusMessage(password, Color.RED);\r\n                return;\r\n            }else if(!validator.isValidEmail(email)){\r\n                setStatusMessage(\"Invalid Email\", Color.RED);\r\n                return;\r\n            }else if(!validator.isValidCreditCard(creditCard)){\r\n                setStatusMessage(\"Invalid Credit Card\", Color.RED);\r\n                return;\r\n            }else {\r\n                setStatusMessage(\"Registering\", Color.GREEN);\r\n                registerUser(name, email, password, creditCard, selectedRole);\r\n            }\r\n        });\r\n    }\r\n    public void setStatusMessage(String message, int colour){\r\n        TextView statusMessage = findViewById(R.id.statusMessage);\r\n        statusMessage.setText(message);\r\n        statusMessage.setTextColor(colour);\r\n    }\r\n    private void registerUser(String name, String email, String password, String creditCard, String role) {\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        // Registration successful\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n                        User newUser = new User(name, email, password, creditCard, role);\r\n                        mDatabase.child(\"users\").child(user.getUid()).setValue(newUser)\r\n                                .addOnCompleteListener(task1 -> {\r\n                                    if (task1.isSuccessful()) {\r\n                                        setStatusMessage(\"Registration successful\",Color.GREEN);\r\n                                    } else {\r\n                                        setStatusMessage(\"Failed to save user data\",Color.RED);\r\n                                    }\r\n                                });\r\n                    } else {\r\n                        // Registration failed\r\n                        setStatusMessage(\"Registration Failed\",Color.RED);\r\n                    }\r\n                });\r\n    }\r\n}\r\n
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/employeeDashboard/RegisterActivity.java b/app/src/main/java/com/example/quickcashapp/employeeDashboard/RegisterActivity.java
+--- a/app/src/main/java/com/example/quickcashapp/employeeDashboard/RegisterActivity.java	
++++ b/app/src/main/java/com/example/quickcashapp/employeeDashboard/RegisterActivity.java	
+@@ -8,11 +8,7 @@
+ import android.widget.RadioGroup;
+ import android.widget.TextView;
+ 
+-import androidx.activity.EdgeToEdge;
+ import androidx.appcompat.app.AppCompatActivity;
+-import androidx.core.graphics.Insets;
+-import androidx.core.view.ViewCompat;
+-import androidx.core.view.WindowInsetsCompat;
+ 
+ import com.example.quickcashapp.LoginValidator;
+ import com.example.quickcashapp.R;
+@@ -27,51 +23,54 @@
+     private DatabaseReference mDatabase;
+     private RadioGroup roleRadioGroup;
+     private RadioButton selectedRoleButton;
+-    public LoginValidator validator;
++    private LoginValidator validator;
+ 
+     @Override
+     protected void onCreate(Bundle savedInstanceState) {
+         super.onCreate(savedInstanceState);
+-        EdgeToEdge.enable(this);
+         setContentView(R.layout.activity_register);
+-        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
+-            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
+-            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
+-            return insets;
+-        });
+ 
+-        // Initialize Firebase Auth and Database Reference
+         mAuth = FirebaseAuth.getInstance();
+         mDatabase = FirebaseDatabase.getInstance().getReference();
+         validator = new LoginValidator();
+ 
+-        // Get references to the UI elements
+         EditText nameEditText = findViewById(R.id.name);
+         EditText emailEditText = findViewById(R.id.email);
+         EditText passwordEditText = findViewById(R.id.password);
+         EditText creditCardEditText = findViewById(R.id.credit_card);
+         roleRadioGroup = findViewById(R.id.role_radio_group);
+-
+         Button registerButton = findViewById(R.id.register_button);
+ 
+-
+         registerButton.setOnClickListener(v -> {
+             String name = nameEditText.getText().toString().trim();
+             String email = emailEditText.getText().toString().trim();
+-            String password = passwordEditText.getText().toString();
++            String password = passwordEditText.getText().toString().trim();
+             String creditCard = creditCardEditText.getText().toString().trim();
+ 
+             // Validate input fields
+-            if (name.isEmpty() || email.isEmpty() || password.isEmpty() || creditCard.isEmpty()) {
+-                setStatusMessage("Please fill in all fields",Color.RED);
++            if (validator.isEmpty(name) || validator.isEmpty(email) || validator.isEmpty(password) || validator.isEmpty(creditCard)) {
++                setStatusMessage("Please fill in all fields", Color.RED);
+                 return;
+             }
+ 
+-            // Get selected role
++            if (!validator.isValidEmail(email)) {
++                setStatusMessage("Invalid email address", Color.RED);
++                return;
++            }
++
++            if (!validator.isValidPassword(password)) {
++                setStatusMessage("Password must contain at least 6 characters, including uppercase, lowercase, and a number", Color.RED);
++                return;
++            }
++
++            if (!validator.isValidCreditCard(creditCard)) {
++                setStatusMessage("Invalid credit card number", Color.RED);
++                return;
++            }
++
+             int selectedRoleId = roleRadioGroup.getCheckedRadioButtonId();
+             if (selectedRoleId == -1) {
+-                // No role selected
+-                setStatusMessage("Please select a role",Color.RED);
++                setStatusMessage("Please select a role", Color.RED);
+                 return;
+             } else {
+                 selectedRoleButton = findViewById(selectedRoleId);
+@@ -79,46 +78,41 @@
+ 
+             String selectedRole = selectedRoleButton.getText().toString().toLowerCase();
+ 
+-            // Register the user with the selected role
+-            if(!validator.isValidPassword(password)){
+-                setStatusMessage(password, Color.RED);
+-                return;
+-            }else if(!validator.isValidEmail(email)){
+-                setStatusMessage("Invalid Email", Color.RED);
+-                return;
+-            }else if(!validator.isValidCreditCard(creditCard)){
+-                setStatusMessage("Invalid Credit Card", Color.RED);
++            if (!validator.isValidRole(selectedRole)) {
++                setStatusMessage("Invalid role selected", Color.RED);
+                 return;
+-            }else {
+-                setStatusMessage("Registering", Color.GREEN);
+-                registerUser(name, email, password, creditCard, selectedRole);
+-            }
++            }
++
++            // Register the user
++            registerUser(name, email, password, creditCard, selectedRole);
+         });
+     }
+-    public void setStatusMessage(String message, int colour){
+-        TextView statusMessage = findViewById(R.id.statusMessage);
+-        statusMessage.setText(message);
+-        statusMessage.setTextColor(colour);
+-    }
++
++    // Method to register the user in Firebase
+     private void registerUser(String name, String email, String password, String creditCard, String role) {
+         mAuth.createUserWithEmailAndPassword(email, password)
+                 .addOnCompleteListener(this, task -> {
+                     if (task.isSuccessful()) {
+-                        // Registration successful
+                         FirebaseUser user = mAuth.getCurrentUser();
+                         User newUser = new User(name, email, password, creditCard, role);
+                         mDatabase.child("users").child(user.getUid()).setValue(newUser)
+                                 .addOnCompleteListener(task1 -> {
+                                     if (task1.isSuccessful()) {
+-                                        setStatusMessage("Registration successful",Color.GREEN);
++                                        setStatusMessage("Registration successful", Color.GREEN);
+                                     } else {
+-                                        setStatusMessage("Failed to save user data",Color.RED);
++                                        setStatusMessage("Failed to save user data", Color.RED);
+                                     }
+                                 });
+                     } else {
+-                        // Registration failed
+-                        setStatusMessage("Registration Failed",Color.RED);
++                        setStatusMessage("Registration failed: " + task.getException().getMessage(), Color.RED);
+                     }
+                 });
+     }
++
++    // Method to display status messages
++    public void setStatusMessage(String message, int colour) {
++        TextView statusMessage = findViewById(R.id.statusMessage);
++        statusMessage.setText(message);
++        statusMessage.setTextColor(colour);
++    }
+ }
+Index: app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityProfile.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp.employerDashboard;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\n\r\nimport com.example.quickcashapp.R;\r\n\r\npublic class SubActivityProfile extends MainActivityEmployer {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_sub_profile);\r\n    }\r\n}
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityProfile.java b/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityProfile.java
+--- a/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityProfile.java	
++++ b/app/src/main/java/com/example/quickcashapp/employerDashboard/SubActivityProfile.java	
+@@ -1,16 +1,62 @@
+ package com.example.quickcashapp.employerDashboard;
+ 
++import android.app.AlertDialog;
++import android.content.DialogInterface;
++import android.content.Intent;
+ import android.os.Bundle;
++import android.widget.Button;
++import android.widget.Toast;
+ 
+ import androidx.activity.EdgeToEdge;
+ 
++import com.example.quickcashapp.LoginActivity;
+ import com.example.quickcashapp.R;
++import com.google.firebase.auth.FirebaseAuth;
++import com.google.firebase.database.DatabaseReference;
++import com.google.firebase.database.FirebaseDatabase;
++
+ 
+ public class SubActivityProfile extends MainActivityEmployer {
++
++    private FirebaseAuth mAuth;
++    private DatabaseReference mDatabase;
++
+     @Override
+     protected void onCreate(Bundle savedInstanceState) {
+         super.onCreate(savedInstanceState);
+         EdgeToEdge.enable(this);
+         setContentView(R.layout.activity_sub_profile);
++
++
++        //Setup Firebase Auth and Database
++        mAuth = FirebaseAuth.getInstance();
++        mDatabase = FirebaseDatabase.getInstance().getReference();
++
++        //When logout button is clicked take to method to logout user
++        Button logoutButton = findViewById(R.id.logout_button);
++        logoutButton.setOnClickListener(v -> logoutUser());
++    }
++
++    private void logoutUser(){
++
++        new AlertDialog.Builder(SubActivityProfile.this)
++                .setTitle("Logout")
++                .setMessage("Are you sure you want to logout?")
++                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
++                    public void onClick(DialogInterface dialog, int which){
++
++                        //Sign out the user from firebase
++                        mAuth.signOut();
++                        Toast.makeText(SubActivityProfile.this, "Logged out successfully", Toast.LENGTH_SHORT).show();
++
++                        //Switch the activity to the login activity
++                        Intent intent = new Intent(SubActivityProfile.this, LoginActivity.class); //Fill in null with login activity
++                        startActivity(intent);
++                        finish(); //Close the profile activity
++
++                    }
++                })
++                .setNegativeButton("No", null)
++                .show();
+     }
+ }
+\ No newline at end of file
Index: .idea/androidTestResultsUserPreferences.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidTestResultsUserPreferences\">\r\n    <option name=\"androidTestResultsTableState\">\r\n      <map>\r\n        <entry key=\"-1914084653\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_6_Pro_API_30\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"323647046\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_8_Pro_API_31\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"890745521\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_6_Pro_API_30\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"1436104304\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Pixel_6_Pro_API_30\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
--- a/.idea/androidTestResultsUserPreferences.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/androidTestResultsUserPreferences.xml	(date 1728945842446)
@@ -16,6 +16,19 @@
             </AndroidTestResultsTableState>
           </value>
         </entry>
+        <entry key="-1400229921">
+          <value>
+            <AndroidTestResultsTableState>
+              <option name="preferredColumnWidths">
+                <map>
+                  <entry key="Duration" value="90" />
+                  <entry key="Pixel_6_Pro_API_30" value="120" />
+                  <entry key="Tests" value="360" />
+                </map>
+              </option>
+            </AndroidTestResultsTableState>
+          </value>
+        </entry>
         <entry key="323647046">
           <value>
             <AndroidTestResultsTableState>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_26__Changes_.xml
rename from .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
rename to .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_26__Changes_.xml
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_26__Changes_.xml	(date 1728944812885)
@@ -1,4 +1,4 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]" date="1728502279800" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:31 [Changes]" />
+<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_26_[Changes]" date="1728944803788" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_26_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-14 오후 7:26 [Changes]" />
 </changelist>
\ No newline at end of file
Index: app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
new file mode 100644
--- /dev/null	(date 1728945842456)
+++ b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java	(date 1728945842456)
@@ -0,0 +1,66 @@
+package com.example.quickcashapp;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.typeText;
+import static androidx.test.espresso.assertion.ViewAssertions.matches;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+
+import androidx.test.core.app.ActivityScenario;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+
+import com.example.quickcashapp.employeeDashboard.RegisterActivity;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+@RunWith(AndroidJUnit4.class)
+public class RegisterEspressoTest {
+
+    @Before
+    public void setUp() {
+        ActivityScenario.launch(RegisterActivity.class);
+    }
+
+    @Test
+    public void testSuccessfulRegistration() throws InterruptedException {
+        onView(withId(R.id.name)).perform(typeText("iterationOne"));
+        onView(withId(R.id.email)).perform(typeText("iterationOne@gmail.com"));//must create new email for the test to work.
+        onView(withId(R.id.password)).perform(typeText("password1234S"));
+        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
+        onView(withId(R.id.role_radio_group)).perform(click());
+        onView(withId(R.id.register_button)).perform(click());
+        Thread.sleep(2000);// test closes whilst program is sending a GET request
+        onView(withId(R.id.statusMessage)).check(matches(withText("Registration successful")));
+    }
+
+    @Test
+    public void testEmptyFields() {
+        onView(withId(R.id.register_button)).perform(click());
+        onView(withId(R.id.statusMessage)).check(matches(withText("Please fill in all fields")));
+    }
+
+    @Test
+    public void testNoRoleSelected() {
+        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
+        onView(withId(R.id.email)).perform(typeText("Johntest111111!@gmail.com"));
+        onView(withId(R.id.password)).perform(typeText("password1234S"));
+        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
+        onView(withId(R.id.register_button)).perform(click());
+        onView(withId(R.id.statusMessage)).check(matches(withText("Please select a role")));
+    }
+
+    @Test
+    public void testInvalidEmail() {
+        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
+        onView(withId(R.id.email)).perform(typeText("invalidemail"));
+        onView(withId(R.id.password)).perform(typeText("password1234S"));
+        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
+        onView(withId(R.id.role_radio_group)).perform(click());
+        onView(withId(R.id.register_button)).perform(click());
+        onView(withId(R.id.statusMessage)).check(matches(withText("Invalid email address")));
+    }
+
+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_1.xml
new file mode 100644
--- /dev/null	(date 1728944812879)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_1.xml	(date 1728944812879)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]1" date="1728944784898" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-14 오후 7:25 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_.xml
rename from .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
rename to .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_.xml
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_25__Changes_.xml	(date 1728944812871)
@@ -1,4 +1,4 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]" date="1728502533206" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:34 [Changes]" />
+<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]" date="1728944751188" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_25_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-14 오후 7:25 [Changes]" />
 </changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1728945842449)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch	(date 1728945842449)
@@ -0,0 +1,83 @@
+Index: .idea/deploymentTargetSelector.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"EmployerProfileEspressoTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+--- a/.idea/deploymentTargetSelector.xml	
++++ b/.idea/deploymentTargetSelector.xml	
+@@ -5,7 +5,13 @@
+       <SelectionState runConfigName="app">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+-      <SelectionState runConfigName="EmployerProfileEspressoTest">
++      <SelectionState runConfigName="testLoginSuccess()">
++        <option name="selectionMode" value="DROPDOWN" />
++      </SelectionState>
++      <SelectionState runConfigName="LoginActivity">
++        <option name="selectionMode" value="DROPDOWN" />
++      </SelectionState>
++      <SelectionState runConfigName="testLoginFailure()">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+     </selectionStates>
+Index: app/src/main/java/com/example/quickcashapp/LoginActivity.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        // Apply window insets for padding\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        // Initialize Firebase Auth and Database\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n        // Get references to the UI elements\r\n        EditText emailEditText = findViewById(R.id.email);\r\n        EditText passwordEditText = findViewById(R.id.password);\r\n        Button loginButton = findViewById(R.id.login_button);\r\n        TextView registerButton = findViewById(R.id.register_link);\r\n\r\n        registerButton.setOnClickListener(v -> {navigateToRegistration();});\r\n\r\n\r\n        // Set the login button click listener\r\n        loginButton.setOnClickListener(v -> {\r\n            String email = emailEditText.getText().toString().trim();\r\n            String password = passwordEditText.getText().toString().trim();\r\n\r\n            // Validate input fields\r\n            if (!isValidEmail(email)) {\r\n                Toast.makeText(LoginActivity.this, \"Please enter a valid email address\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            if (password.isEmpty()) {\r\n                Toast.makeText(LoginActivity.this, \"Please fill in the password field\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            // Log in the user\r\n            loginUser(email, password);\r\n        });\r\n    }\r\n\r\n    private void navigateToRegistration() {\r\n        Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    // Helper method to validate email format\r\n    private boolean isValidEmail(String email) {\r\n        return !email.isEmpty() && Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    private void loginUser(String email, String password) {\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        // Login successful\r\n                        Toast.makeText(LoginActivity.this, \"Login successful\", Toast.LENGTH_SHORT).show();\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n                        // Retrieve user role from database\r\n                        mDatabase.child(\"users\").child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                if (dataSnapshot.exists()) {\r\n                                    String role = dataSnapshot.child(\"role\").getValue(String.class);\r\n                                    // Navigate to the respective dashboard based on user role\r\n                                    Intent intent;\r\n                                    if (\"employer\".equals(role)) {\r\n\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    } else {\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    }\r\n                                    startActivity(intent);\r\n                                    finish(); // Close the login activity\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(DatabaseError databaseError) {\r\n                                Toast.makeText(LoginActivity.this, \"Failed to retrieve user role\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // Login failed\r\n                        Toast.makeText(LoginActivity.this, \"Login failed: \" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n}\r\n
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/LoginActivity.java b/app/src/main/java/com/example/quickcashapp/LoginActivity.java
+--- a/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
++++ b/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
+@@ -117,7 +117,7 @@
+                         });
+                     } else {
+                         // Login failed
+-                        Toast.makeText(LoginActivity.this, "Login failed: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
++                        Toast.makeText(LoginActivity.this, "Login failed " , Toast.LENGTH_SHORT).show();
+                     }
+                 });
+     }
+Index: .idea/androidTestResultsUserPreferences.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidTestResultsUserPreferences\">\r\n    <option name=\"androidTestResultsTableState\">\r\n      <map>\r\n        <entry key=\"-1400229921\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Medium_Phone_API_35\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
+===================================================================
+diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
+--- a/.idea/androidTestResultsUserPreferences.xml	
++++ b/.idea/androidTestResultsUserPreferences.xml	
+@@ -16,6 +16,32 @@
+             </AndroidTestResultsTableState>
+           </value>
+         </entry>
++        <entry key="-83393644">
++          <value>
++            <AndroidTestResultsTableState>
++              <option name="preferredColumnWidths">
++                <map>
++                  <entry key="Duration" value="90" />
++                  <entry key="Medium_Phone_API_35" value="120" />
++                  <entry key="Tests" value="360" />
++                </map>
++              </option>
++            </AndroidTestResultsTableState>
++          </value>
++        </entry>
++        <entry key="1487946811">
++          <value>
++            <AndroidTestResultsTableState>
++              <option name="preferredColumnWidths">
++                <map>
++                  <entry key="Duration" value="90" />
++                  <entry key="Medium_Phone_API_35" value="120" />
++                  <entry key="Tests" value="360" />
++                </map>
++              </option>
++            </AndroidTestResultsTableState>
++          </value>
++        </entry>
+       </map>
+     </option>
+   </component>
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\nfirebaseAuth = \"21.0.1\"\r\nfirebaseDatabase = \"20.0.2\"\r\nuiautomator = \"2.3.0\"\r\nfirebaseAuthVersion = \"23.0.0\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\nuiautomator = { group = \"androidx.test.uiautomator\", name = \"uiautomator\", version.ref = \"uiautomator\" }\r\ngoogle-firebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuthVersion\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/gradle/libs.versions.toml	(date 1728945842464)
@@ -10,7 +10,6 @@
 firebaseAuth = "21.0.1"
 firebaseDatabase = "20.0.2"
 uiautomator = "2.3.0"
-firebaseAuthVersion = "23.0.0"
 
 [libraries]
 junit = { group = "junit", name = "junit", version.ref = "junit" }
@@ -23,7 +22,6 @@
 firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
 firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
 uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
-google-firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuthVersion" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/misc.xml	(date 1728945842447)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
Index: app/src/main/java/com/example/quickcashapp/LoginValidator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.quickcashapp;\r\n\r\nimport java.util.regex.Pattern;\r\n\r\npublic class LoginValidator {\r\n\r\n    public LoginValidator(){\r\n\r\n    };\r\n\r\n    public static boolean isValidPassword(String password) {\r\n        if (password == null) return false;\r\n        String passwordPattern = \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$\";\r\n        return Pattern.matches(passwordPattern, password);\r\n    }\r\n\r\n    public static boolean isValidEmail(String email) {\r\n        if (email == null) return false;\r\n\r\n        // Regular expression for the email\r\n        String emailPattern = \"^[\\\\w!#$%&'*+/=?`{|}~^.-]+@[\\\\w.-]+\\\\.[a-zA-Z]{2,}$\";\r\n        return Pattern.matches(emailPattern, email);\r\n    }\r\n\r\n    // Credit Card: Validates using Luhn algorithm\r\n    public static boolean isValidCreditCard(String number) {\r\n        if (number == null) return false;\r\n\r\n        int length =number.length();\r\n\r\n        return (length == 16);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/quickcashapp/LoginValidator.java b/app/src/main/java/com/example/quickcashapp/LoginValidator.java
--- a/app/src/main/java/com/example/quickcashapp/LoginValidator.java	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/app/src/main/java/com/example/quickcashapp/LoginValidator.java	(date 1728945842459)
@@ -4,31 +4,55 @@
 
 public class LoginValidator {
 
-    public LoginValidator(){
+    public LoginValidator() {
+    }
 
-    };
-
+    // Validates if the password meets the criteria: at least 1 digit, 1 lowercase, 1 uppercase, and minimum 6 characters
     public static boolean isValidPassword(String password) {
-        if (password == null) return false;
+        if (password == null || password.isEmpty()) return false;
         String passwordPattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$";
         return Pattern.matches(passwordPattern, password);
     }
 
+    // Validates if the email follows a proper email pattern
     public static boolean isValidEmail(String email) {
-        if (email == null) return false;
-
-        // Regular expression for the email
+        if (email == null || email.isEmpty()) return false;
         String emailPattern = "^[\\w!#$%&'*+/=?`{|}~^.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$";
         return Pattern.matches(emailPattern, email);
     }
 
-    // Credit Card: Validates using Luhn algorithm
+    // Validates credit card number (length check and Luhn algorithm)
     public static boolean isValidCreditCard(String number) {
-        if (number == null) return false;
+        if (number == null || number.isEmpty()) return false;
+        // Length check: standard length is 16
+        if (number.length() != 16) return false;
 
-        int length =number.length();
+        return luhnCheck(number);
+    }
 
-        return (length == 16);
+    // Luhn algorithm for credit card validation
+    private static boolean luhnCheck(String number) {
+        int sum = 0;
+        boolean alternate = false;
+        for (int i = number.length() - 1; i >= 0; i--) {
+            int n = Integer.parseInt(number.substring(i, i + 1));
+            if (alternate) {
+                n *= 2;
+                if (n > 9) n -= 9;
+            }
+            sum += n;
+            alternate = !alternate;
+        }
+        return (sum % 10 == 0);
     }
-}
+
+    // Checks if input string is empty
+    public static boolean isEmpty(String input) {
+        return input == null || input.trim().isEmpty();
+    }
 
+    // Checks if the role selected is either "employer" or "employee"
+    public static boolean isValidRole(String role) {
+        return "employer".equalsIgnoreCase(role) || "employee".equalsIgnoreCase(role);
+    }
+}
Index: app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
new file mode 100644
--- /dev/null	(date 1728945842462)
+++ b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java	(date 1728945842462)
@@ -0,0 +1,43 @@
+package com.example.quickcashapp;
+
+import static org.junit.Assert.assertNull;
+import static org.mockito.Mockito.*;
+
+import com.google.firebase.auth.FirebaseAuth;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.mockito.Mock;
+import org.mockito.Mockito;
+import org.mockito.MockitoAnnotations;
+
+
+/**
+ * Unit tests for the logout portion
+ */
+public class EmployerProfileUnitTest {
+
+    @Mock
+    FirebaseAuth mockAuth;
+
+    @Before
+    public void setUp() {
+
+        MockitoAnnotations.initMocks(this);
+        //Mock Firebase instance
+        mockAuth = Mockito.mock(FirebaseAuth.class);
+    }
+
+    @Test
+    public void testLogout(){
+
+        //Act like there is no user signed in by returning null from getCurrentUser
+        when(mockAuth.getCurrentUser()).thenReturn(null);
+
+        //Use signOut and make sure it works
+        mockAuth.signOut();
+        verify(mockAuth).signOut();
+        //Check to make sure there is no current user
+        assertNull(mockAuth.getCurrentUser());
+    }
+}
Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
new file mode 100644
--- /dev/null	(date 1728945842455)
+++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java	(date 1728945842455)
@@ -0,0 +1,48 @@
+package com.example.quickcashapp;
+
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.espresso.intent.Intents;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.intent.Intents.intended;
+import static androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+
+import com.example.quickcashapp.employerDashboard.SubActivityProfile;
+
+
+@RunWith(AndroidJUnit4.class)
+public class EmployerProfileEspressoTest {
+
+    @Rule
+    public ActivityTestRule<SubActivityProfile> activityTestRule = new ActivityTestRule<>(SubActivityProfile.class);
+
+    @Before
+    public void setUp() {
+        // Initialize Espresso Intents before the test
+        Intents.init();
+    }
+
+
+    @Test
+    public void testLogoutButtonChangesActivity(){
+        //Click logout button
+        onView(withId(R.id.logout_button)).perform(click());
+
+        intended(hasComponent(LoginActivity.class.getName()));
+
+    }
+
+    @After
+    public void tearDown(){
+        Intents.release();
+    }
+}
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
new file mode 100644
--- /dev/null	(date 1728945973031)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml	(date 1728945973031)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]" date="1728858920529" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 10/13/2024 7:35 PM [Changes]" />
+</changelist>
\ No newline at end of file
Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
new file mode 100644
--- /dev/null	(date 1728945842456)
+++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java	(date 1728945842456)
@@ -0,0 +1,5 @@
+package com.example.quickcashapp;
+
+public class EmployerProfileUIAutomatorTest {
+
+}
Index: app/src/main/res/layout/activity_sub_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"@string/profile\"\r\n        tools:layout_editor_absoluteX=\"174dp\"\r\n        tools:layout_editor_absoluteY=\"349dp\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sub_profile.xml b/app/src/main/res/layout/activity_sub_profile.xml
--- a/app/src/main/res/layout/activity_sub_profile.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/app/src/main/res/layout/activity_sub_profile.xml	(date 1728945842461)
@@ -1,15 +1,61 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <TextView
-        android:id="@+id/textView7"
+    <ImageView
+        android:id="@+id/profile_picture"
+        android:layout_width="148dp"
+        android:layout_height="146dp"
+        android:layout_marginStart="131dp"
+        android:layout_marginTop="136dp"
+        android:layout_marginEnd="132dp"
+        app:layout_constraintBottom_toTopOf="@+id/profile_description"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:srcCompat="@tools:sample/avatars" />
+
+    <EditText
+        android:id="@+id/profile_description"
+        android:layout_width="413dp"
+        android:layout_height="121dp"
+        android:layout_marginBottom="135dp"
+        android:ems="10"
+        android:inputType="text"
+        android:text="Description"
+        app:layout_constraintBottom_toTopOf="@+id/profile_rating"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/profile_picture" />
+
+    <RatingBar
+        android:id="@+id/profile_rating"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="82dp"
+        android:layout_marginTop="135dp"
+        android:layout_marginEnd="89dp"
+        android:layout_marginBottom="136dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/profile_description" />
+
+    <Button
+        android:id="@+id/logout_button"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="@string/profile"
-        tools:layout_editor_absoluteX="174dp"
-        tools:layout_editor_absoluteY="349dp"
-        tools:ignore="MissingConstraints" />
+        android:layout_marginStart="22dp"
+        android:layout_marginTop="15dp"
+        android:layout_marginEnd="19dp"
+        android:layout_marginBottom="140dp"
+        android:text="Logout"
+        app:layout_constraintBottom_toTopOf="@+id/profile_description"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/profile_picture"
+        app:layout_constraintTop_toTopOf="parent" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_04_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_04_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_04_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1728943472904)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_04_[Changes]/shelved.patch	(date 1728943472904)
@@ -0,0 +1,24 @@
+Index: .idea/deploymentTargetSelector.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"RegisterEspressoTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"testSuccessfulRegistration() (2)\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+--- a/.idea/deploymentTargetSelector.xml	(revision e406c28856e1bcba0a126fb01b1af7450fdf534f)
++++ b/.idea/deploymentTargetSelector.xml	(date 1728943042213)
+@@ -5,12 +5,6 @@
+       <SelectionState runConfigName="app">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+-      <SelectionState runConfigName="RegisterEspressoTest">
+-        <option name="selectionMode" value="DROPDOWN" />
+-      </SelectionState>
+-      <SelectionState runConfigName="testSuccessfulRegistration() (2)">
+-        <option name="selectionMode" value="DROPDOWN" />
+-      </SelectionState>
+     </selectionStates>
+   </component>
+ </project>
+\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_04__Changes_.xml
rename from .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
rename to .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_04__Changes_.xml
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__7_04__Changes_.xml	(date 1728943545968)
@@ -1,4 +1,4 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]" date="1728501999923" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:26 [Changes]" />
+<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_04_[Changes]" date="1728943473381" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_04_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-14 오후 7:04 [Changes]" />
 </changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_26_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_26_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1728944799762)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_7_26_[Changes]/shelved.patch	(date 1728944799762)
@@ -0,0 +1,1196 @@
+Index: app/src/main/res/layout/activity_sub_profile.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView7\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"profile\"\r\n        tools:layout_editor_absoluteX=\"174dp\"\r\n        tools:layout_editor_absoluteY=\"349dp\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/res/layout/activity_sub_profile.xml b/app/src/main/res/layout/activity_sub_profile.xml
+--- a/app/src/main/res/layout/activity_sub_profile.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/app/src/main/res/layout/activity_sub_profile.xml	(date 1728944772367)
+@@ -1,14 +1,61 @@
+ <?xml version="1.0" encoding="utf-8"?>
+ <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
++    xmlns:app="http://schemas.android.com/apk/res-auto"
+     xmlns:tools="http://schemas.android.com/tools"
+     android:layout_width="match_parent"
+     android:layout_height="match_parent">
+ 
+-    <TextView
+-        android:id="@+id/textView7"
++    <ImageView
++        android:id="@+id/profile_picture"
++        android:layout_width="148dp"
++        android:layout_height="146dp"
++        android:layout_marginStart="131dp"
++        android:layout_marginTop="136dp"
++        android:layout_marginEnd="132dp"
++        app:layout_constraintBottom_toTopOf="@+id/profile_description"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toStartOf="parent"
++        app:layout_constraintTop_toTopOf="parent"
++        tools:srcCompat="@tools:sample/avatars" />
++
++    <EditText
++        android:id="@+id/profile_description"
++        android:layout_width="413dp"
++        android:layout_height="121dp"
++        android:layout_marginBottom="135dp"
++        android:ems="10"
++        android:inputType="text"
++        android:text="Description"
++        app:layout_constraintBottom_toTopOf="@+id/profile_rating"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toStartOf="parent"
++        app:layout_constraintTop_toBottomOf="@+id/profile_picture" />
++
++    <RatingBar
++        android:id="@+id/profile_rating"
++        android:layout_width="wrap_content"
++        android:layout_height="wrap_content"
++        android:layout_marginStart="82dp"
++        android:layout_marginTop="135dp"
++        android:layout_marginEnd="89dp"
++        android:layout_marginBottom="136dp"
++        app:layout_constraintBottom_toBottomOf="parent"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toStartOf="parent"
++        app:layout_constraintTop_toBottomOf="@+id/profile_description" />
++
++    <Button
++        android:id="@+id/logout_button"
+         android:layout_width="wrap_content"
+         android:layout_height="wrap_content"
+-        android:text="profile"
+-        tools:layout_editor_absoluteX="174dp"
+-        tools:layout_editor_absoluteY="349dp" />
++        android:layout_marginStart="22dp"
++        android:layout_marginTop="15dp"
++        android:layout_marginEnd="19dp"
++        android:layout_marginBottom="140dp"
++        android:text="Logout"
++        app:layout_constraintBottom_toTopOf="@+id/profile_description"
++        app:layout_constraintEnd_toEndOf="parent"
++        app:layout_constraintStart_toEndOf="@+id/profile_picture"
++        app:layout_constraintTop_toTopOf="parent" />
++
+ </androidx.constraintlayout.widget.ConstraintLayout>
+\ No newline at end of file
+Index: app/build.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    implementation libs.uiautomator\r\n    implementation libs.google.firebase.auth\r\n    implementation libs.firebase.database\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/build.gradle b/app/build.gradle
+--- a/app/build.gradle	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/app/build.gradle	(date 1728944756360)
+@@ -35,15 +35,26 @@
+     implementation libs.material
+     implementation libs.activity
+     implementation libs.constraintlayout
+-    implementation libs.uiautomator
+-    implementation libs.google.firebase.auth
++    implementation libs.firebase.auth
+     implementation libs.firebase.database
+     testImplementation libs.junit
+     androidTestImplementation libs.ext.junit
+     androidTestImplementation libs.espresso.core
++    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
++    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
++    androidTestImplementation 'androidx.test:core:1.4.0'
++    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
++    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
++    androidTestImplementation 'androidx.test:rules:1.4.0'
++    androidTestImplementation 'com.google.firebase:firebase-auth:21.0.1'
++    androidTestImplementation 'com.google.firebase:firebase-database:20.0.2'
++    testImplementation 'junit:junit:4.13.2'
++    testImplementation 'org.mockito:mockito-inline:4.x.x'
++    testImplementation("org.mockito:mockito-inline:4.11.0")
++    androidTestImplementation("org.mockito:mockito-inline:4.11.0")
++
+ 
+     implementation platform('com.google.firebase:firebase-bom:33.3.0')
+     implementation 'com.google.firebase:firebase-analytics'
+     implementation "androidx.cardview:cardview:1.0.0"
+-
+ }
+\ No newline at end of file
+Index: gradle/libs.versions.toml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\nfirebaseAuth = \"21.0.1\"\r\nfirebaseDatabase = \"20.0.2\"\r\nuiautomator = \"2.3.0\"\r\nfirebaseAuthVersion = \"23.0.0\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nfirebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuth\" }\r\nfirebase-database = { group = \"com.google.firebase\", name = \"firebase-database\", version.ref = \"firebaseDatabase\" }\r\nuiautomator = { group = \"androidx.test.uiautomator\", name = \"uiautomator\", version.ref = \"uiautomator\" }\r\ngoogle-firebase-auth = { group = \"com.google.firebase\", name = \"firebase-auth\", version.ref = \"firebaseAuthVersion\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+--- a/gradle/libs.versions.toml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/gradle/libs.versions.toml	(date 1728944761349)
+@@ -9,8 +9,6 @@
+ constraintlayout = "2.1.4"
+ firebaseAuth = "21.0.1"
+ firebaseDatabase = "20.0.2"
+-uiautomator = "2.3.0"
+-firebaseAuthVersion = "23.0.0"
+ 
+ [libraries]
+ junit = { group = "junit", name = "junit", version.ref = "junit" }
+@@ -22,8 +20,6 @@
+ constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
+ firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
+ firebase-database = { group = "com.google.firebase", name = "firebase-database", version.ref = "firebaseDatabase" }
+-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
+-google-firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuthVersion" }
+ 
+ [plugins]
+ android-application = { id = "com.android.application", version.ref = "agp" }
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,86 +0,0 @@
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision 4d3dbdb11a23177d5850fb90061145216dc6b7f9)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501999644)
+-@@ -5,6 +5,12 @@
+-       <SelectionState runConfigName="app">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728501999650)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501999650)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]" date="1728501946054" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:25 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_34__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]" date="1728502533206" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:34 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_34_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,130 +0,0 @@
+-Index: app/build.gradle
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle b/app/build.gradle
+---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/build.gradle	(date 1728502359047)
+-@@ -35,6 +35,7 @@
+-     implementation libs.material
+-     implementation libs.activity
+-     implementation libs.constraintlayout
+-+    implementation libs.uiautomator
+-     testImplementation libs.junit
+-     androidTestImplementation libs.ext.junit
+-     androidTestImplementation libs.espresso.core
+-Index: gradle/libs.versions.toml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
+---- a/gradle/libs.versions.toml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/gradle/libs.versions.toml	(date 1728502358990)
+-@@ -7,6 +7,7 @@
+- material = "1.12.0"
+- activity = "1.9.2"
+- constraintlayout = "2.1.4"
+-+uiautomator = "2.3.0"
+- 
+- [libraries]
+- junit = { group = "junit", name = "junit", version.ref = "junit" }
+-@@ -16,6 +17,7 @@
+- material = { group = "com.google.android.material", name = "material", version.ref = "material" }
+- activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
+- constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
+-+uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
+- 
+- [plugins]
+- android-application = { id = "com.android.application", version.ref = "agp" }
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728502279555)
+-@@ -11,6 +11,12 @@
+-       <SelectionState runConfigName="MainActivityEmployer">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728502279560)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728502279560)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+deleted file mode 100644
+--- a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,73 +0,0 @@
+-package com.example.quickcashapp;
+-
+-import static org.junit.Assert.assertTrue;
+-
+-import android.content.Context;
+-import android.content.Intent;
+-
+-import androidx.test.core.app.ApplicationProvider;
+-import androidx.test.platform.app.InstrumentationRegistry;
+-import androidx.test.uiautomator.By;
+-import androidx.test.uiautomator.UiDevice;
+-import androidx.test.uiautomator.UiObject;
+-import androidx.test.uiautomator.UiSelector;
+-import androidx.test.uiautomator.Until;
+-import androidx.test.uiautomator.UiObjectNotFoundException;
+-
+-
+-import org.junit.Before;
+-import org.junit.Test;
+-
+-public class UIAutomatorTest {
+-
+-    private static final int LAUNCH_TIMEOUT = 5000;
+-    final String launcherPackageName = "com.example.quickcashapp";
+-    private UiDevice device;
+-
+-    @Before
+-    public void setup() {
+-        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-        Context context = ApplicationProvider.getApplicationContext();
+-        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-        context.startActivity(launcherIntent);
+-        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-
+-    @Test
+-    public void checkIfLandingPageIsVisible() throws UiObjectNotFoundException {
+-        //enter email and password
+-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
+-        emailBox.setText("test@example.com");
+-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
+-        passwordBox.setText("Password123");
+-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
+-        loginButton.clickAndWaitForNewWindow();
+-
+-
+-        //find employer and employee button
+-        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-        assertTrue(EmployerButton.exists());
+-        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-        assertTrue(EmployeeButton.exists());
+-    }
+-
+-    @Test
+-    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-        //enter email and password
+-        UiObject emailBox = device.findObject(new UiSelector().text("Email"));
+-        emailBox.setText("test@example.com");
+-        UiObject passwordBox = device.findObject(new UiSelector().text("Password"));
+-        passwordBox.setText("Password123");
+-        UiObject loginButton = device.findObject(new UiSelector().text("Login"));
+-        loginButton.clickAndWaitForNewWindow();
+-
+-        //Press employer button
+-        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-        employerButton.clickAndWaitForNewWindow();
+-
+-        //check employer dashboard exists
+-        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-        assertTrue(dashboardMain.exists());
+-    }
+-
+-}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_31__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]" date="1728502279800" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_31_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:31 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,135 +0,0 @@
+-Index: app/build.gradle
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle b/app/build.gradle
+---- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/build.gradle	(date 1728500319519)
+-@@ -39,7 +39,15 @@
+-     androidTestImplementation libs.ext.junit
+-     androidTestImplementation libs.espresso.core
+- 
+-+    /* UI Automator */
+-+    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
+-+    androidTestImplementation project(path: ':app')
+-+
+-+
+-+    /*  Firebase */
+-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
+-     implementation 'com.google.firebase:firebase-analytics'
+-+
+-+    /* CardView UI */
+-     implementation "androidx.cardview:cardview:1.0.0"
+- }
+-\ No newline at end of file
+-Index: app/src/main/AndroidManifest.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.QuickCashApp\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n                <action android:name=\"android.intent.action.MainActivityEmployer\" />\r\n\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".MainActivityEmployer\"/>\r\n        <activity android:name=\".MainActivityEmployee\"/>\r\n        <activity android:name=\".SubActivityJobPost\"/>\r\n        <activity android:name=\".SubActivityMap\"/>\r\n        <activity android:name=\".SubActivityPayment\"/>\r\n        <activity android:name=\".SubActivityPreferredEmployee\"/>\r\n        <activity android:name=\".SubActivityProfile\"/>\r\n\r\n\r\n\r\n\r\n\r\n    </application>\r\n\r\n</manifest>\r\n
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
+---- a/app/src/main/AndroidManifest.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/app/src/main/AndroidManifest.xml	(date 1728493872913)
+-@@ -31,11 +31,6 @@
+-         <activity android:name=".SubActivityPayment"/>
+-         <activity android:name=".SubActivityPreferredEmployee"/>
+-         <activity android:name=".SubActivityProfile"/>
+--
+--
+--
+--
+--
+-     </application>
+- 
+- </manifest>
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728501528985)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501528985)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501426538)
+-@@ -11,6 +11,12 @@
+-       <SelectionState runConfigName="MainActivityEmployer">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,103 +0,0 @@
+-Index: app/build.gradle
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n}
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/build.gradle b/app/build.gradle
+---- a/app/build.gradle	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
+-+++ b/app/build.gradle	(date 1728501911885)
+-@@ -41,4 +41,5 @@
+- 
+-     implementation platform('com.google.firebase:firebase-bom:33.3.0')
+-     implementation 'com.google.firebase:firebase-analytics'
+-+    implementation "androidx.cardview:cardview:1.0.0"
+- }
+-\ No newline at end of file
+-Index: .idea/deploymentTargetSelector.xml
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+---- a/.idea/deploymentTargetSelector.xml	(revision e7b0613b68c56bebaa5e346f6148b34a41b21fd4)
+-+++ b/.idea/deploymentTargetSelector.xml	(date 1728501945785)
+-@@ -5,6 +5,12 @@
+-       <SelectionState runConfigName="app">
+-         <option name="selectionMode" value="DROPDOWN" />
+-       </SelectionState>
+-+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-+        <option name="selectionMode" value="DROPDOWN" />
+-+      </SelectionState>
+-     </selectionStates>
+-   </component>
+- </project>
+-\ No newline at end of file
+-Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-IDEA additional info:
+-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+-<+>UTF-8
+-===================================================================
+-diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
+-new file mode 100644
+---- /dev/null	(date 1728501945776)
+-+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501945776)
+-@@ -0,0 +1,52 @@
+-+package com.example.quickcashapp;
+-+
+-+import static org.junit.Assert.assertTrue;
+-+
+-+import android.content.Context;
+-+import android.content.Intent;
+-+
+-+import androidx.test.core.app.ApplicationProvider;
+-+import androidx.test.platform.app.InstrumentationRegistry;
+-+import androidx.test.uiautomator.By;
+-+import androidx.test.uiautomator.UiDevice;
+-+import androidx.test.uiautomator.UiObject;
+-+import androidx.test.uiautomator.UiSelector;
+-+import androidx.test.uiautomator.Until;
+-+import androidx.test.uiautomator.UiObjectNotFoundException;
+-+
+-+
+-+import org.junit.Before;
+-+import org.junit.Test;
+-+
+-+public class UIAutomatorTest {
+-+
+-+    private static final int LAUNCH_TIMEOUT = 5000;
+-+    final String launcherPackageName = "com.example.quickcashapp";
+-+    private UiDevice device;
+-+
+-+    @Before
+-+    public void setup() {
+-+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+-+        Context context = ApplicationProvider.getApplicationContext();
+-+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+-+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+-+        context.startActivity(launcherIntent);
+-+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+-+
+-+    @Test
+-+    public void checkIfLandingPageIsVisible() {
+-+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+-+        assertTrue(EmployerButton.exists());
+-+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+-+        assertTrue(EmployeeButton.exists());
+-+    }
+-+
+-+    @Test
+-+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+-+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+-+        employerButton.clickAndWaitForNewWindow();
+-+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+-+        assertTrue(dashboardMain.exists());
+-+    }
+-+
+-+}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml
+deleted file mode 100644
+--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_26__Changes_.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ /dev/null	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
+@@ -1,4 +0,0 @@
+-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]" date="1728501999923" recycled="true" deleted="true">
+-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_26_[Changes]/shelved.patch" />
+-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:26 [Changes]" />
+-</changelist>
+\ No newline at end of file
+Index: app/google-services.json
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>{\r\n  \"project_info\": {\r\n    \"project_number\": \"493535482513\",\r\n    \"project_id\": \"quickcashapp-782c2\",\r\n    \"storage_bucket\": \"quickcashapp-782c2.appspot.com\"\r\n  },\r\n  \"client\": [\r\n    {\r\n      \"client_info\": {\r\n        \"mobilesdk_app_id\": \"1:493535482513:android:d5392fb74819af1f4d2530\",\r\n        \"android_client_info\": {\r\n          \"package_name\": \"com.example.quickcashapp\"\r\n        }\r\n      },\r\n      \"oauth_client\": [],\r\n      \"api_key\": [\r\n        {\r\n          \"current_key\": \"AIzaSyBmL0PrqLfUE2cFpqklrm8Oa8d_6Nhqmsg\"\r\n        }\r\n      ],\r\n      \"services\": {\r\n        \"appinvite_service\": {\r\n          \"other_platform_oauth_client\": []\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"configuration_version\": \"1\"\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/google-services.json b/app/google-services.json
+--- a/app/google-services.json	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/app/google-services.json	(date 1728944756354)
+@@ -26,4 +26,4 @@
+     }
+   ],
+   "configuration_version": "1"
+-}
+\ No newline at end of file
++}
+Index: app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java
+new file mode 100644
+--- /dev/null	(date 1728944756333)
++++ b/app/src/androidTest/java/com/example/quickcashapp/RegisterEspressoTest.java	(date 1728944756333)
+@@ -0,0 +1,66 @@
++package com.example.quickcashapp;
++
++import static androidx.test.espresso.Espresso.onView;
++import static androidx.test.espresso.action.ViewActions.click;
++import static androidx.test.espresso.action.ViewActions.typeText;
++import static androidx.test.espresso.assertion.ViewAssertions.matches;
++import static androidx.test.espresso.matcher.ViewMatchers.withId;
++import static androidx.test.espresso.matcher.ViewMatchers.withText;
++
++import androidx.test.core.app.ActivityScenario;
++import androidx.test.ext.junit.runners.AndroidJUnit4;
++
++import com.example.quickcashapp.employeeDashboard.RegisterActivity;
++
++import org.junit.Before;
++import org.junit.Test;
++import org.junit.runner.RunWith;
++
++@RunWith(AndroidJUnit4.class)
++public class RegisterEspressoTest {
++
++    @Before
++    public void setUp() {
++        ActivityScenario.launch(RegisterActivity.class);
++    }
++
++    @Test
++    public void testSuccessfulRegistration() throws InterruptedException {
++        onView(withId(R.id.name)).perform(typeText("iterationOne"));
++        onView(withId(R.id.email)).perform(typeText("iterationOne@gmail.com"));//must create new email for the test to work.
++        onView(withId(R.id.password)).perform(typeText("password1234S"));
++        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
++        onView(withId(R.id.role_radio_group)).perform(click());
++        onView(withId(R.id.register_button)).perform(click());
++        Thread.sleep(2000);// test closes whilst program is sending a GET request
++        onView(withId(R.id.statusMessage)).check(matches(withText("Registration successful")));
++    }
++
++    @Test
++    public void testEmptyFields() {
++        onView(withId(R.id.register_button)).perform(click());
++        onView(withId(R.id.statusMessage)).check(matches(withText("Please fill in all fields")));
++    }
++
++    @Test
++    public void testNoRoleSelected() {
++        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
++        onView(withId(R.id.email)).perform(typeText("Johntest111111!@gmail.com"));
++        onView(withId(R.id.password)).perform(typeText("password1234S"));
++        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
++        onView(withId(R.id.register_button)).perform(click());
++        onView(withId(R.id.statusMessage)).check(matches(withText("Please select a role")));
++    }
++
++    @Test
++    public void testInvalidEmail() {
++        onView(withId(R.id.name)).perform(typeText("Johntest111111"));
++        onView(withId(R.id.email)).perform(typeText("invalidemail"));
++        onView(withId(R.id.password)).perform(typeText("password1234S"));
++        onView(withId(R.id.credit_card)).perform(typeText("4111111111111111"));
++        onView(withId(R.id.role_radio_group)).perform(click());
++        onView(withId(R.id.register_button)).perform(click());
++        onView(withId(R.id.statusMessage)).check(matches(withText("Invalid email address")));
++    }
++
++}
+Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java
+new file mode 100644
+--- /dev/null	(date 1728944756347)
++++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileEspressoTest.java	(date 1728944756347)
+@@ -0,0 +1,48 @@
++package com.example.quickcashapp;
++
++import androidx.test.ext.junit.runners.AndroidJUnit4;
++import androidx.test.rule.ActivityTestRule;
++import androidx.test.espresso.intent.Intents;
++
++import org.junit.After;
++import org.junit.Before;
++import org.junit.Rule;
++import org.junit.Test;
++import org.junit.runner.RunWith;
++
++import static androidx.test.espresso.Espresso.onView;
++import static androidx.test.espresso.action.ViewActions.click;
++import static androidx.test.espresso.intent.Intents.intended;
++import static androidx.test.espresso.intent.matcher.IntentMatchers.hasComponent;
++import static androidx.test.espresso.matcher.ViewMatchers.withId;
++
++import com.example.quickcashapp.employerDashboard.SubActivityProfile;
++
++
++@RunWith(AndroidJUnit4.class)
++public class EmployerProfileEspressoTest {
++
++    @Rule
++    public ActivityTestRule<SubActivityProfile> activityTestRule = new ActivityTestRule<>(SubActivityProfile.class);
++
++    @Before
++    public void setUp() {
++        // Initialize Espresso Intents before the test
++        Intents.init();
++    }
++
++
++    @Test
++    public void testLogoutButtonChangesActivity(){
++        //Click logout button
++        onView(withId(R.id.logout_button)).perform(click());
++
++        intended(hasComponent(LoginActivity.class.getName()));
++
++    }
++
++    @After
++    public void tearDown(){
++        Intents.release();
++    }
++}
+Index: app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java
+new file mode 100644
+--- /dev/null	(date 1728944756341)
++++ b/app/src/test/java/com/example/quickcashapp/EmployerProfileUnitTest.java	(date 1728944756341)
+@@ -0,0 +1,43 @@
++package com.example.quickcashapp;
++
++import static org.junit.Assert.assertNull;
++import static org.mockito.Mockito.*;
++
++import com.google.firebase.auth.FirebaseAuth;
++
++import org.junit.Before;
++import org.junit.Test;
++import org.mockito.Mock;
++import org.mockito.Mockito;
++import org.mockito.MockitoAnnotations;
++
++
++/**
++ * Unit tests for the logout portion
++ */
++public class EmployerProfileUnitTest {
++
++    @Mock
++    FirebaseAuth mockAuth;
++
++    @Before
++    public void setUp() {
++
++        MockitoAnnotations.initMocks(this);
++        //Mock Firebase instance
++        mockAuth = Mockito.mock(FirebaseAuth.class);
++    }
++
++    @Test
++    public void testLogout(){
++
++        //Act like there is no user signed in by returning null from getCurrentUser
++        when(mockAuth.getCurrentUser()).thenReturn(null);
++
++        //Use signOut and make sure it works
++        mockAuth.signOut();
++        verify(mockAuth).signOut();
++        //Check to make sure there is no current user
++        assertNull(mockAuth.getCurrentUser());
++    }
++}
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+--- a/.idea/misc.xml	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/.idea/misc.xml	(date 1728944761354)
+@@ -1,4 +1,3 @@
+-<?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
+   <component name="ExternalStorageConfigurationManager" enabled="true" />
+   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
+Index: app/src/main/java/com/example/quickcashapp/LoginValidator.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.quickcashapp;\r\n\r\nimport java.util.regex.Pattern;\r\n\r\npublic class LoginValidator {\r\n\r\n    public LoginValidator(){\r\n\r\n    };\r\n\r\n    public static boolean isValidPassword(String password) {\r\n        if (password == null) return false;\r\n        String passwordPattern = \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$\";\r\n        return Pattern.matches(passwordPattern, password);\r\n    }\r\n\r\n    public static boolean isValidEmail(String email) {\r\n        if (email == null) return false;\r\n\r\n        // Regular expression for the email\r\n        String emailPattern = \"^[\\\\w!#$%&'*+/=?`{|}~^.-]+@[\\\\w.-]+\\\\.[a-zA-Z]{2,}$\";\r\n        return Pattern.matches(emailPattern, email);\r\n    }\r\n\r\n    // Credit Card: Validates using Luhn algorithm\r\n    public static boolean isValidCreditCard(String number) {\r\n        if (number == null) return false;\r\n\r\n        int length =number.length();\r\n\r\n        return (length == 16);\r\n    }\r\n}\r\n\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/main/java/com/example/quickcashapp/LoginValidator.java b/app/src/main/java/com/example/quickcashapp/LoginValidator.java
+--- a/app/src/main/java/com/example/quickcashapp/LoginValidator.java	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/app/src/main/java/com/example/quickcashapp/LoginValidator.java	(date 1728944761359)
+@@ -4,31 +4,55 @@
+ 
+ public class LoginValidator {
+ 
+-    public LoginValidator(){
++    public LoginValidator() {
++    }
+ 
+-    };
+-
++    // Validates if the password meets the criteria: at least 1 digit, 1 lowercase, 1 uppercase, and minimum 6 characters
+     public static boolean isValidPassword(String password) {
+-        if (password == null) return false;
++        if (password == null || password.isEmpty()) return false;
+         String passwordPattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{6,}$";
+         return Pattern.matches(passwordPattern, password);
+     }
+ 
++    // Validates if the email follows a proper email pattern
+     public static boolean isValidEmail(String email) {
+-        if (email == null) return false;
+-
+-        // Regular expression for the email
++        if (email == null || email.isEmpty()) return false;
+         String emailPattern = "^[\\w!#$%&'*+/=?`{|}~^.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$";
+         return Pattern.matches(emailPattern, email);
+     }
+ 
+-    // Credit Card: Validates using Luhn algorithm
++    // Validates credit card number (length check and Luhn algorithm)
+     public static boolean isValidCreditCard(String number) {
+-        if (number == null) return false;
++        if (number == null || number.isEmpty()) return false;
++        // Length check: standard length is 16
++        if (number.length() != 16) return false;
+ 
+-        int length =number.length();
++        return luhnCheck(number);
++    }
+ 
+-        return (length == 16);
++    // Luhn algorithm for credit card validation
++    private static boolean luhnCheck(String number) {
++        int sum = 0;
++        boolean alternate = false;
++        for (int i = number.length() - 1; i >= 0; i--) {
++            int n = Integer.parseInt(number.substring(i, i + 1));
++            if (alternate) {
++                n *= 2;
++                if (n > 9) n -= 9;
++            }
++            sum += n;
++            alternate = !alternate;
++        }
++        return (sum % 10 == 0);
+     }
+-}
++
++    // Checks if input string is empty
++    public static boolean isEmpty(String input) {
++        return input == null || input.trim().isEmpty();
++    }
+ 
++    // Checks if the role selected is either "employer" or "employee"
++    public static boolean isValidRole(String role) {
++        return "employer".equalsIgnoreCase(role) || "employee".equalsIgnoreCase(role);
++    }
++}
+Index: app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java
+new file mode 100644
+--- /dev/null	(date 1728944756367)
++++ b/app/src/androidTest/java/com/example/quickcashapp/EmployerProfileUIAutomatorTest.java	(date 1728944756367)
+@@ -0,0 +1,5 @@
++package com.example.quickcashapp;
++
++public class EmployerProfileUIAutomatorTest {
++
++}
+Index: build.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\nalias(libs.plugins.android.application) apply false\r\n    id 'com.google.gms.google-services' version '4.4.2' apply false\r\n}
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/build.gradle b/build.gradle
+--- a/build.gradle	(revision 00ac1d8749ba6a98167b1cc72e5fe45c6bbe0444)
++++ b/build.gradle	(date 1728944778821)
+@@ -2,4 +2,4 @@
+ plugins {
+ alias(libs.plugins.android.application) apply false
+     id 'com.google.gms.google-services' version '4.4.2' apply false
+-}
+\ No newline at end of file
++}
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml
+new file mode 100644
+--- /dev/null	(date 1728944756381)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM__Changes_.xml	(date 1728944756381)
+@@ -0,0 +1,4 @@
++<changelist name="Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]" date="1728858920529" recycled="false" toDelete="true">
++  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch" />
++  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 10/13/2024 7:35 PM [Changes]" />
++</changelist>
+\ No newline at end of file
+Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch
+new file mode 100644
+--- /dev/null	(date 1728944756376)
++++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]/shelved.patch	(date 1728944756376)
+@@ -0,0 +1,83 @@
++Index: .idea/deploymentTargetSelector.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"EmployerProfileEspressoTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
++Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
++<+>UTF-8
++===================================================================
++diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
++--- a/.idea/deploymentTargetSelector.xml	
+++++ b/.idea/deploymentTargetSelector.xml	
++@@ -5,7 +5,13 @@
++       <SelectionState runConfigName="app">
++         <option name="selectionMode" value="DROPDOWN" />
++       </SelectionState>
++-      <SelectionState runConfigName="EmployerProfileEspressoTest">
+++      <SelectionState runConfigName="testLoginSuccess()">
+++        <option name="selectionMode" value="DROPDOWN" />
+++      </SelectionState>
+++      <SelectionState runConfigName="LoginActivity">
+++        <option name="selectionMode" value="DROPDOWN" />
+++      </SelectionState>
+++      <SelectionState runConfigName="testLoginFailure()">
++         <option name="selectionMode" value="DROPDOWN" />
++       </SelectionState>
++     </selectionStates>
++Index: app/src/main/java/com/example/quickcashapp/LoginActivity.java
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+>package com.example.quickcashapp;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Patterns;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    private DatabaseReference mDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        // Apply window insets for padding\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        // Initialize Firebase Auth and Database\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n\r\n        // Get references to the UI elements\r\n        EditText emailEditText = findViewById(R.id.email);\r\n        EditText passwordEditText = findViewById(R.id.password);\r\n        Button loginButton = findViewById(R.id.login_button);\r\n        TextView registerButton = findViewById(R.id.register_link);\r\n\r\n        registerButton.setOnClickListener(v -> {navigateToRegistration();});\r\n\r\n\r\n        // Set the login button click listener\r\n        loginButton.setOnClickListener(v -> {\r\n            String email = emailEditText.getText().toString().trim();\r\n            String password = passwordEditText.getText().toString().trim();\r\n\r\n            // Validate input fields\r\n            if (!isValidEmail(email)) {\r\n                Toast.makeText(LoginActivity.this, \"Please enter a valid email address\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            if (password.isEmpty()) {\r\n                Toast.makeText(LoginActivity.this, \"Please fill in the password field\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            // Log in the user\r\n            loginUser(email, password);\r\n        });\r\n    }\r\n\r\n    private void navigateToRegistration() {\r\n        Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    // Helper method to validate email format\r\n    private boolean isValidEmail(String email) {\r\n        return !email.isEmpty() && Patterns.EMAIL_ADDRESS.matcher(email).matches();\r\n    }\r\n\r\n    private void loginUser(String email, String password) {\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, task -> {\r\n                    if (task.isSuccessful()) {\r\n                        // Login successful\r\n                        Toast.makeText(LoginActivity.this, \"Login successful\", Toast.LENGTH_SHORT).show();\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n\r\n                        // Retrieve user role from database\r\n                        mDatabase.child(\"users\").child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(DataSnapshot dataSnapshot) {\r\n                                if (dataSnapshot.exists()) {\r\n                                    String role = dataSnapshot.child(\"role\").getValue(String.class);\r\n                                    // Navigate to the respective dashboard based on user role\r\n                                    Intent intent;\r\n                                    if (\"employer\".equals(role)) {\r\n\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    } else {\r\n                                        intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                                    }\r\n                                    startActivity(intent);\r\n                                    finish(); // Close the login activity\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(DatabaseError databaseError) {\r\n                                Toast.makeText(LoginActivity.this, \"Failed to retrieve user role\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // Login failed\r\n                        Toast.makeText(LoginActivity.this, \"Login failed: \" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n    }\r\n}\r\n
++===================================================================
++diff --git a/app/src/main/java/com/example/quickcashapp/LoginActivity.java b/app/src/main/java/com/example/quickcashapp/LoginActivity.java
++--- a/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
+++++ b/app/src/main/java/com/example/quickcashapp/LoginActivity.java	
++@@ -117,7 +117,7 @@
++                         });
++                     } else {
++                         // Login failed
++-                        Toast.makeText(LoginActivity.this, "Login failed: " + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
+++                        Toast.makeText(LoginActivity.this, "Login failed " , Toast.LENGTH_SHORT).show();
++                     }
++                 });
++     }
++Index: .idea/androidTestResultsUserPreferences.xml
++IDEA additional info:
++Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
++<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidTestResultsUserPreferences\">\r\n    <option name=\"androidTestResultsTableState\">\r\n      <map>\r\n        <entry key=\"-1400229921\">\r\n          <value>\r\n            <AndroidTestResultsTableState>\r\n              <option name=\"preferredColumnWidths\">\r\n                <map>\r\n                  <entry key=\"Duration\" value=\"90\" />\r\n                  <entry key=\"Medium_Phone_API_35\" value=\"120\" />\r\n                  <entry key=\"Tests\" value=\"360\" />\r\n                </map>\r\n              </option>\r\n            </AndroidTestResultsTableState>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
++===================================================================
++diff --git a/.idea/androidTestResultsUserPreferences.xml b/.idea/androidTestResultsUserPreferences.xml
++--- a/.idea/androidTestResultsUserPreferences.xml	
+++++ b/.idea/androidTestResultsUserPreferences.xml	
++@@ -16,6 +16,32 @@
++             </AndroidTestResultsTableState>
++           </value>
++         </entry>
+++        <entry key="-83393644">
+++          <value>
+++            <AndroidTestResultsTableState>
+++              <option name="preferredColumnWidths">
+++                <map>
+++                  <entry key="Duration" value="90" />
+++                  <entry key="Medium_Phone_API_35" value="120" />
+++                  <entry key="Tests" value="360" />
+++                </map>
+++              </option>
+++            </AndroidTestResultsTableState>
+++          </value>
+++        </entry>
+++        <entry key="1487946811">
+++          <value>
+++            <AndroidTestResultsTableState>
+++              <option name="preferredColumnWidths">
+++                <map>
+++                  <entry key="Duration" value="90" />
+++                  <entry key="Medium_Phone_API_35" value="120" />
+++                  <entry key="Tests" value="360" />
+++                </map>
+++              </option>
+++            </AndroidTestResultsTableState>
+++          </value>
+++        </entry>
++       </map>
++     </option>
++   </component>
+diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch
+new file mode 100644
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_6_49_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_6_49_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_6_49_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1728942565751)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_6_49_[Changes]/shelved.patch	(date 1728942565751)
@@ -0,0 +1,27 @@
+Index: .idea/deploymentTargetSelector.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"mainActivityEmployeeTest()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"checkIfLandingPageIsVisible()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"checkIfSelectingRoleIsAvailable()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"UIAutomatorTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
+--- a/.idea/deploymentTargetSelector.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
++++ b/.idea/deploymentTargetSelector.xml	(date 1728888048550)
+@@ -5,16 +5,10 @@
+       <SelectionState runConfigName="app">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+-      <SelectionState runConfigName="mainActivityEmployeeTest()">
+-        <option name="selectionMode" value="DROPDOWN" />
+-      </SelectionState>
+       <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+       <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+-        <option name="selectionMode" value="DROPDOWN" />
+-      </SelectionState>
+-      <SelectionState runConfigName="UIAutomatorTest">
+         <option name="selectionMode" value="DROPDOWN" />
+       </SelectionState>
+     </selectionStates>
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"mainActivityEmployeeTest()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"checkIfLandingPageIsVisible()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"checkIfSelectingRoleIsAvailable()\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"UIAutomatorTest\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/deploymentTargetSelector.xml	(date 1728945842447)
@@ -5,16 +5,10 @@
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
-      <SelectionState runConfigName="mainActivityEmployeeTest()">
-        <option name="selectionMode" value="DROPDOWN" />
-      </SelectionState>
-      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
-        <option name="selectionMode" value="DROPDOWN" />
-      </SelectionState>
-      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+      <SelectionState runConfigName="testLoginSuccess()">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
-      <SelectionState runConfigName="UIAutomatorTest">
+      <SelectionState runConfigName="EmployerProfileEspressoTest">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
     </selectionStates>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__6_49__Changes_.xml
rename from .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml
rename to .idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__6_49__Changes_.xml
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09__4_25__Changes_.xml	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14__6_49__Changes_.xml	(date 1728943462124)
@@ -1,4 +1,4 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]" date="1728501946054" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-09_오후_4_25_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-09 오후 4:25 [Changes]" />
+<changelist name="Uncommitted_changes_before_Checkout_at_2024-10-14_오후_6_49_[Changes]" date="1728942580573" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_2024-10-14_오후_6_49_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 2024-10-14 오후 6:49 [Changes]" />
 </changelist>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\nalias(libs.plugins.android.application) apply false\r\n    id 'com.google.gms.google-services' version '4.4.2' apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 65c4976127ddb311cbbe76b3a7e91ba260559596)
+++ b/build.gradle	(date 1728945842463)
@@ -2,4 +2,4 @@
 plugins {
 alias(libs.plugins.android.application) apply false
     id 'com.google.gms.google-services' version '4.4.2' apply false
-}
\ No newline at end of file
+}
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_10_13_2024_7_35_PM_[Changes]1/shelved.patch
new file mode 100644
