Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.quickcashapp'\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.quickcashapp\"\r\n        minSdk 23\r\n        targetSdk 34\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation libs.appcompat\r\n    implementation libs.material\r\n    implementation libs.activity\r\n    implementation libs.constraintlayout\r\n    testImplementation libs.junit\r\n    androidTestImplementation libs.ext.junit\r\n    androidTestImplementation libs.espresso.core\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:33.3.0')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+++ b/app/build.gradle	(date 1728502359047)
@@ -35,6 +35,7 @@
     implementation libs.material
     implementation libs.activity
     implementation libs.constraintlayout
+    implementation libs.uiautomator
     testImplementation libs.junit
     androidTestImplementation libs.ext.junit
     androidTestImplementation libs.espresso.core
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.6.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.2\"\r\nconstraintlayout = \"2.1.4\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+++ b/gradle/libs.versions.toml	(date 1728502358990)
@@ -7,6 +7,7 @@
 material = "1.12.0"
 activity = "1.9.2"
 constraintlayout = "2.1.4"
+uiautomator = "2.3.0"
 
 [libraries]
 junit = { group = "junit", name = "junit", version.ref = "junit" }
@@ -16,6 +17,7 @@
 material = { group = "com.google.android.material", name = "material", version.ref = "material" }
 activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
 constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
+uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"SubActivity1\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n      <SelectionState runConfigName=\"MainActivityEmployer\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 824e3d976171fda8417a55e3654e0f14faf8fdc4)
+++ b/.idea/deploymentTargetSelector.xml	(date 1728502279555)
@@ -11,6 +11,12 @@
       <SelectionState runConfigName="MainActivityEmployer">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
     </selectionStates>
   </component>
 </project>
\ No newline at end of file
Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
new file mode 100644
--- /dev/null	(date 1728502279560)
+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728502279560)
@@ -0,0 +1,52 @@
+package com.example.quickcashapp;
+
+import static org.junit.Assert.assertTrue;
+
+import android.content.Context;
+import android.content.Intent;
+
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.uiautomator.By;
+import androidx.test.uiautomator.UiDevice;
+import androidx.test.uiautomator.UiObject;
+import androidx.test.uiautomator.UiSelector;
+import androidx.test.uiautomator.Until;
+import androidx.test.uiautomator.UiObjectNotFoundException;
+
+
+import org.junit.Before;
+import org.junit.Test;
+
+public class UIAutomatorTest {
+
+    private static final int LAUNCH_TIMEOUT = 5000;
+    final String launcherPackageName = "com.example.quickcashapp";
+    private UiDevice device;
+
+    @Before
+    public void setup() {
+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+        Context context = ApplicationProvider.getApplicationContext();
+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+        context.startActivity(launcherIntent);
+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+
+    @Test
+    public void checkIfLandingPageIsVisible() {
+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+        assertTrue(EmployerButton.exists());
+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+        assertTrue(EmployeeButton.exists());
+    }
+
+    @Test
+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+        employerButton.clickAndWaitForNewWindow();
+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+        assertTrue(dashboardMain.exists());
+    }
+
+}
