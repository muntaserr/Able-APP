Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 4d3dbdb11a23177d5850fb90061145216dc6b7f9)
+++ b/.idea/deploymentTargetSelector.xml	(date 1728501999644)
@@ -5,6 +5,12 @@
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
       </SelectionState>
+      <SelectionState runConfigName="checkIfLandingPageIsVisible()">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+      <SelectionState runConfigName="checkIfSelectingRoleIsAvailable()">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
     </selectionStates>
   </component>
 </project>
\ No newline at end of file
Index: app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java
new file mode 100644
--- /dev/null	(date 1728501999650)
+++ b/app/src/androidTest/java/com/example/quickcashapp/UIAutomatorTest.java	(date 1728501999650)
@@ -0,0 +1,52 @@
+package com.example.quickcashapp;
+
+import static org.junit.Assert.assertTrue;
+
+import android.content.Context;
+import android.content.Intent;
+
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.uiautomator.By;
+import androidx.test.uiautomator.UiDevice;
+import androidx.test.uiautomator.UiObject;
+import androidx.test.uiautomator.UiSelector;
+import androidx.test.uiautomator.Until;
+import androidx.test.uiautomator.UiObjectNotFoundException;
+
+
+import org.junit.Before;
+import org.junit.Test;
+
+public class UIAutomatorTest {
+
+    private static final int LAUNCH_TIMEOUT = 5000;
+    final String launcherPackageName = "com.example.quickcashapp";
+    private UiDevice device;
+
+    @Before
+    public void setup() {
+        device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());
+        Context context = ApplicationProvider.getApplicationContext();
+        Intent launcherIntent = context.getPackageManager().getLaunchIntentForPackage(launcherPackageName);
+        launcherIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
+        context.startActivity(launcherIntent);
+        device.wait(Until.hasObject(By.pkg(launcherPackageName).depth(0)), LAUNCH_TIMEOUT);    }
+
+    @Test
+    public void checkIfLandingPageIsVisible() {
+        UiObject EmployerButton = device.findObject(new UiSelector().text("Employer"));
+        assertTrue(EmployerButton.exists());
+        UiObject EmployeeButton = device.findObject(new UiSelector().text("Employee"));
+        assertTrue(EmployeeButton.exists());
+    }
+
+    @Test
+    public void checkIfSelectingRoleIsAvailable() throws UiObjectNotFoundException {
+        UiObject employerButton = device.findObject(new UiSelector().text("Employer"));
+        employerButton.clickAndWaitForNewWindow();
+        UiObject dashboardMain = device.findObject(new UiSelector().text("EMPLOYER DASHBOARD"));
+        assertTrue(dashboardMain.exists());
+    }
+
+}
